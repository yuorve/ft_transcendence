// node_modules/@babylonjs/core/FlowGraph/utils.js
function _isADescendantOf(mesh1, mesh2) {
  return !!(mesh1.parent && (mesh1.parent === mesh2 || _isADescendantOf(mesh1.parent, mesh2)));
}
function _getClassNameOf(v) {
  if (v.getClassName) {
    return v.getClassName();
  }
  return;
}
function _areSameVectorClass(className, className2) {
  return className === className2 && (className === "Vector2" || className === "Vector3" || className === "Vector4");
}
function _areSameMatrixClass(className, className2) {
  return className === className2 && (className === "Matrix" || className === "Matrix2D" || className === "Matrix3D");
}
function _areSameIntegerClass(className, className2) {
  return className === "FlowGraphInteger" && className2 === "FlowGraphInteger";
}
function isNumeric(a, validIfNaN) {
  const isNumeric2 = typeof a === "number" || typeof (a == null ? void 0 : a.value) === "number";
  if (isNumeric2 && !validIfNaN) {
    return !isNaN(getNumericValue(a));
  }
  return isNumeric2;
}
function getNumericValue(a) {
  return typeof a === "number" ? a : a.value;
}

export {
  _isADescendantOf,
  _getClassNameOf,
  _areSameVectorClass,
  _areSameMatrixClass,
  _areSameIntegerClass,
  isNumeric,
  getNumericValue
};
//# sourceMappingURL=chunk-2EXF6GXX.js.map
