{
  "version": 3,
  "sources": ["../../../dev/core/src/FlowGraph/utils.ts"],
  "sourcesContent": ["import type { Matrix, Quaternion, Vector2, Vector3, Vector4 } from \"core/Maths/math.vector\";\r\nimport type { Node } from \"../node\";\r\nimport type { FlowGraphInteger } from \"./CustomTypes/flowGraphInteger\";\r\nimport type { FlowGraphMatrix2D, FlowGraphMatrix3D } from \"./CustomTypes/flowGraphMatrix\";\r\nimport { FlowGraphTypes } from \"./flowGraphRichTypes\";\r\n\r\n/**\r\n * @internal\r\n * Returns if mesh1 is a descendant of mesh2\r\n * @param mesh1\r\n * @param mesh2\r\n * @returns\r\n */\r\nexport function _isADescendantOf(mesh1: Node, mesh2: Node): boolean {\r\n    return !!(mesh1.parent && (mesh1.parent === mesh2 || _isADescendantOf(mesh1.parent, mesh2)));\r\n}\r\n\r\nexport type FlowGraphNumber = number | FlowGraphInteger;\r\nexport type FlowGraphVector = Vector2 | Vector3 | Vector4 | Quaternion;\r\nexport type FlowGraphMatrix = Matrix | FlowGraphMatrix2D | FlowGraphMatrix3D;\r\nexport type FlowGraphMathOperationType = FlowGraphNumber | FlowGraphVector | FlowGraphMatrix | boolean;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function _getClassNameOf(v: any) {\r\n    if (v.getClassName) {\r\n        return v.getClassName();\r\n    }\r\n    return;\r\n}\r\n\r\n/**\r\n * @internal\r\n * Check if two classname are the same and are vector classes.\r\n * @param className the first class name\r\n * @param className2 the second class name\r\n * @returns whether the two class names are the same and are vector classes.\r\n */\r\nexport function _areSameVectorClass(className: string, className2: string) {\r\n    return className === className2 && (className === FlowGraphTypes.Vector2 || className === FlowGraphTypes.Vector3 || className === FlowGraphTypes.Vector4);\r\n}\r\n\r\n/**\r\n * @internal\r\n * Check if two classname are the same and are matrix classes.\r\n * @param className the first class name\r\n * @param className2 the second class name\r\n * @returns whether the two class names are the same and are matrix classes.\r\n */\r\nexport function _areSameMatrixClass(className: string, className2: string) {\r\n    return className === className2 && (className === FlowGraphTypes.Matrix || className === FlowGraphTypes.Matrix2D || className === FlowGraphTypes.Matrix3D);\r\n}\r\n\r\n/**\r\n * @internal\r\n * Check if two classname are the same and are integer classes.\r\n * @param className the first class name\r\n * @param className2 the second class name\r\n * @returns whether the two class names are the same and are integer classes.\r\n */\r\nexport function _areSameIntegerClass(className: string, className2: string) {\r\n    return className === \"FlowGraphInteger\" && className2 === \"FlowGraphInteger\";\r\n}\r\n\r\n/**\r\n * Check if an object has a numeric value.\r\n * @param a the object to check if it is a number.\r\n * @param validIfNaN whether to consider NaN as a valid number.\r\n * @returns whether a is a FlowGraphNumber (Integer or number).\r\n */\r\nexport function isNumeric(a: FlowGraphMathOperationType, validIfNaN?: boolean): a is FlowGraphNumber {\r\n    const isNumeric = typeof a === \"number\" || typeof (a as FlowGraphInteger)?.value === \"number\";\r\n    if (isNumeric && !validIfNaN) {\r\n        return !isNaN(getNumericValue(a as FlowGraphNumber));\r\n    }\r\n    return isNumeric;\r\n}\r\n\r\n/**\r\n * Get the numeric value of a FlowGraphNumber.\r\n * @param a the object to get the numeric value from.\r\n * @returns the numeric value.\r\n */\r\nexport function getNumericValue(a: FlowGraphNumber): number {\r\n    return typeof a === \"number\" ? a : a.value;\r\n}\r\n"],
  "mappings": ";AAaM,SAAU,iBAAiB,OAAa,OAAW;AACrD,SAAO,CAAC,EAAE,MAAM,WAAW,MAAM,WAAW,SAAS,iBAAiB,MAAM,QAAQ,KAAK;AAC7F;AAUM,SAAU,gBAAgB,GAAM;AAClC,MAAI,EAAE,cAAc;AAChB,WAAO,EAAE,aAAY;EACzB;AACA;AACJ;AASM,SAAU,oBAAoB,WAAmB,YAAkB;AACrE,SAAO,cAAc,eAAe,cAAS,aAA+B,cAAS,aAA+B,cAAS;AACjI;AASM,SAAU,oBAAoB,WAAmB,YAAkB;AACrE,SAAO,cAAc,eAAe,cAAS,YAA8B,cAAS,cAAgC,cAAS;AACjI;AASM,SAAU,qBAAqB,WAAmB,YAAkB;AACtE,SAAO,cAAc,sBAAsB,eAAe;AAC9D;AAQM,SAAU,UAAU,GAA+B,YAAoB;AACzE,QAAMA,aAAY,OAAO,MAAM,YAAY,QAAQ,uBAAwB,WAAU;AACrF,MAAIA,cAAa,CAAC,YAAY;AAC1B,WAAO,CAAC,MAAM,gBAAgB,CAAoB,CAAC;EACvD;AACA,SAAOA;AACX;AAOM,SAAU,gBAAgB,GAAkB;AAC9C,SAAO,OAAO,MAAM,WAAW,IAAI,EAAE;AACzC;",
  "names": ["isNumeric"]
}
