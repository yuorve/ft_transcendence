import {
  AbstractAudioBus
} from "./chunk-2GG5SORT.js";
import {
  _WebAudioBaseSubGraph
} from "./chunk-FVQUNWKP.js";

// node_modules/@babylonjs/core/AudioV2/abstractAudio/mainAudioBus.js
var MainAudioBus = class extends AbstractAudioBus {
  constructor(name, engine) {
    super(name, engine);
  }
};

// node_modules/@babylonjs/core/AudioV2/webAudio/webAudioMainBus.js
var _WebAudioMainBus = class __WebAudioMainBus extends MainAudioBus {
  /** @internal */
  constructor(name, engine) {
    super(name, engine);
    this._subGraph = new __WebAudioMainBus._SubGraph(this);
    this.audioContext = engine.audioContext;
  }
  /** @internal */
  async init(options) {
    await this._subGraph.init(options);
    if (this.engine.mainOut) {
      if (!this._connect(this.engine.mainOut)) {
        throw new Error("Connect failed");
      }
    }
    this.engine.addMainBus(this);
  }
  /** @internal */
  dispose() {
    super.dispose();
    this.engine.removeMainBus(this);
  }
  /** @internal */
  get inNode() {
    return this._subGraph.inNode;
  }
  /** @internal */
  get outNode() {
    return this._subGraph.outNode;
  }
  _connect(node) {
    var _a;
    const connected = super._connect(node);
    if (!connected) {
      return false;
    }
    if (node.inNode) {
      (_a = this.outNode) == null ? void 0 : _a.connect(node.inNode);
    }
    return true;
  }
  _disconnect(node) {
    var _a;
    const disconnected = super._disconnect(node);
    if (!disconnected) {
      return false;
    }
    if (node.inNode) {
      (_a = this.outNode) == null ? void 0 : _a.disconnect(node.inNode);
    }
    return true;
  }
  /** @internal */
  getClassName() {
    return "_WebAudioMainBus";
  }
};
_WebAudioMainBus._SubGraph = class extends _WebAudioBaseSubGraph {
  get _downstreamNodes() {
    return this._owner._downstreamNodes ?? null;
  }
};

export {
  MainAudioBus,
  _WebAudioMainBus
};
//# sourceMappingURL=chunk-2P633XEI.js.map
