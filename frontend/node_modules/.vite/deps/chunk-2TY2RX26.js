// node_modules/@babylonjs/core/FlowGraph/flowGraphAssetsContext.js
var FlowGraphAssetType;
(function(FlowGraphAssetType2) {
  FlowGraphAssetType2["Animation"] = "Animation";
  FlowGraphAssetType2["AnimationGroup"] = "AnimationGroup";
  FlowGraphAssetType2["Mesh"] = "Mesh";
  FlowGraphAssetType2["Material"] = "Material";
  FlowGraphAssetType2["Camera"] = "Camera";
  FlowGraphAssetType2["Light"] = "Light";
})(FlowGraphAssetType || (FlowGraphAssetType = {}));
function GetFlowGraphAssetWithType(assetsContext, type, index, useIndexAsUniqueId) {
  switch (type) {
    case "Animation":
      return useIndexAsUniqueId ? assetsContext.animations.find((a) => a.uniqueId === index) ?? null : assetsContext.animations[index] ?? null;
    case "AnimationGroup":
      return useIndexAsUniqueId ? assetsContext.animationGroups.find((a) => a.uniqueId === index) ?? null : assetsContext.animationGroups[index] ?? null;
    case "Mesh":
      return useIndexAsUniqueId ? assetsContext.meshes.find((a) => a.uniqueId === index) ?? null : assetsContext.meshes[index] ?? null;
    case "Material":
      return useIndexAsUniqueId ? assetsContext.materials.find((a) => a.uniqueId === index) ?? null : assetsContext.materials[index] ?? null;
    case "Camera":
      return useIndexAsUniqueId ? assetsContext.cameras.find((a) => a.uniqueId === index) ?? null : assetsContext.cameras[index] ?? null;
    case "Light":
      return useIndexAsUniqueId ? assetsContext.lights.find((a) => a.uniqueId === index) ?? null : assetsContext.lights[index] ?? null;
    default:
      return null;
  }
}

export {
  FlowGraphAssetType,
  GetFlowGraphAssetWithType
};
//# sourceMappingURL=chunk-2TY2RX26.js.map
