{
  "version": 3,
  "sources": ["../../../dev/core/src/FlowGraph/Blocks/Data/flowGraphTransformCoordinatesSystemBlock.ts"],
  "sourcesContent": ["import { FlowGraphBlock } from \"../../flowGraphBlock\";\r\nimport type { FlowGraphContext } from \"../../flowGraphContext\";\r\nimport type { FlowGraphDataConnection } from \"../../flowGraphDataConnection\";\r\nimport { RichTypeAny, RichTypeVector3 } from \"../../flowGraphRichTypes\";\r\nimport { TmpVectors, Vector3 } from \"../../../Maths/math.vector\";\r\nimport type { TransformNode } from \"../../../Meshes/transformNode\";\r\nimport type { IFlowGraphBlockConfiguration } from \"../../flowGraphBlock\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport { FlowGraphBlockNames } from \"../flowGraphBlockNames\";\r\n\r\n/**\r\n * This blocks transforms a vector from one coordinate system to another.\r\n */\r\nexport class FlowGraphTransformCoordinatesSystemBlock extends FlowGraphBlock {\r\n    /**\r\n     * Input connection: The source coordinate system.\r\n     */\r\n    public readonly sourceSystem: FlowGraphDataConnection<TransformNode>;\r\n    /**\r\n     * Input connection: The destination coordinate system.\r\n     */\r\n    public readonly destinationSystem: FlowGraphDataConnection<TransformNode>;\r\n    /**\r\n     * Input connection: The coordinates to transform.\r\n     */\r\n    public readonly inputCoordinates: FlowGraphDataConnection<Vector3>;\r\n    /**\r\n     * Output connection: The transformed coordinates.\r\n     */\r\n    public readonly outputCoordinates: FlowGraphDataConnection<Vector3>;\r\n\r\n    /**\r\n     * Creates a new FlowGraphCoordinateTransformBlock\r\n     * @param config optional configuration for this block\r\n     */\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(config);\r\n\r\n        this.sourceSystem = this.registerDataInput(\"sourceSystem\", RichTypeAny);\r\n        this.destinationSystem = this.registerDataInput(\"destinationSystem\", RichTypeAny);\r\n        this.inputCoordinates = this.registerDataInput(\"inputCoordinates\", RichTypeVector3);\r\n        this.outputCoordinates = this.registerDataOutput(\"outputCoordinates\", RichTypeVector3);\r\n    }\r\n\r\n    public override _updateOutputs(_context: FlowGraphContext): void {\r\n        const sourceSystemValue = this.sourceSystem.getValue(_context);\r\n        const destinationSystemValue = this.destinationSystem.getValue(_context);\r\n        const inputCoordinatesValue = this.inputCoordinates.getValue(_context);\r\n\r\n        // takes coordinates from source space to world space\r\n        const sourceWorld = sourceSystemValue.getWorldMatrix();\r\n        // takes coordinates from destination space to world space\r\n        const destinationWorld = destinationSystemValue.getWorldMatrix();\r\n        const destinationWorldInverse = TmpVectors.Matrix[0].copyFrom(destinationWorld);\r\n        // takes coordinates from world space to destination space\r\n        destinationWorldInverse.invert();\r\n\r\n        const sourceToDestination = TmpVectors.Matrix[1];\r\n        // takes coordinates from source space to world space to destination space\r\n        destinationWorldInverse.multiplyToRef(sourceWorld, sourceToDestination);\r\n        const outputCoordinatesValue = this.outputCoordinates.getValue(_context);\r\n\r\n        Vector3.TransformCoordinatesToRef(inputCoordinatesValue, sourceToDestination, outputCoordinatesValue);\r\n    }\r\n\r\n    /**\r\n     * Gets the class name of this block\r\n     * @returns the class name\r\n     */\r\n    public override getClassName(): string {\r\n        return FlowGraphBlockNames.TransformCoordinatesSystem;\r\n    }\r\n}\r\nRegisterClass(FlowGraphBlockNames.TransformCoordinatesSystem, FlowGraphTransformCoordinatesSystemBlock);\r\n"],
  "mappings": ";;;;;;;;;;;;;;AAaM,IAAO,2CAAP,cAAwD,eAAc;;;;;EAsBxE,YAAY,QAAqC;AAC7C,UAAM,MAAM;AAEZ,SAAK,eAAe,KAAK,kBAAkB,gBAAgB,WAAW;AACtE,SAAK,oBAAoB,KAAK,kBAAkB,qBAAqB,WAAW;AAChF,SAAK,mBAAmB,KAAK,kBAAkB,oBAAoB,eAAe;AAClF,SAAK,oBAAoB,KAAK,mBAAmB,qBAAqB,eAAe;EACzF;EAEgB,eAAe,UAA0B;AACrD,UAAM,oBAAoB,KAAK,aAAa,SAAS,QAAQ;AAC7D,UAAM,yBAAyB,KAAK,kBAAkB,SAAS,QAAQ;AACvE,UAAM,wBAAwB,KAAK,iBAAiB,SAAS,QAAQ;AAGrE,UAAM,cAAc,kBAAkB,eAAc;AAEpD,UAAM,mBAAmB,uBAAuB,eAAc;AAC9D,UAAM,0BAA0B,WAAW,OAAO,CAAC,EAAE,SAAS,gBAAgB;AAE9E,4BAAwB,OAAM;AAE9B,UAAM,sBAAsB,WAAW,OAAO,CAAC;AAE/C,4BAAwB,cAAc,aAAa,mBAAmB;AACtE,UAAM,yBAAyB,KAAK,kBAAkB,SAAS,QAAQ;AAEvE,YAAQ,0BAA0B,uBAAuB,qBAAqB,sBAAsB;EACxG;;;;;EAMgB,eAAY;AACxB,WAAA;EACJ;;AAEJ,cAAa,4CAAiD,wCAAwC;",
  "names": []
}
