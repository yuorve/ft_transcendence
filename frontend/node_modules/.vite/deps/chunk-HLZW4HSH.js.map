{
  "version": 3,
  "sources": ["../../../dev/core/src/Shaders/copyTextureToTexture.fragment.ts"],
  "sourcesContent": ["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/helperFunctions\";\n\nconst name = \"copyTextureToTexturePixelShader\";\nconst shader = `uniform float conversion;uniform sampler2D textureSampler;varying vec2 vUV;\n#include<helperFunctions>\nvoid main(void) \n{vec4 color=texture2D(textureSampler,vUV);\n#ifdef DEPTH_TEXTURE\ngl_FragDepth=color.r;\n#else\nif (conversion==1.) {color=toLinearSpace(color);} else if (conversion==2.) {color=toGammaSpace(color);}\ngl_FragColor=color;\n#endif\n}\n`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const copyTextureToTexturePixelShader = { name, shader };\n"],
  "mappings": ";;;;;AAIA,IAAM,OAAO;AACb,IAAM,SAAS;;;;;;;;;;;;AAaf,YAAY,aAAa,IAAI,IAAI;AAE1B,IAAM,kCAAkC,EAAE,MAAM,OAAM;",
  "names": []
}
