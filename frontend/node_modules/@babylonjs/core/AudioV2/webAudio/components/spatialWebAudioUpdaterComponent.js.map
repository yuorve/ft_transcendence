{"version":3,"file":"spatialWebAudioUpdaterComponent.js","sourceRoot":"","sources":["../../../../../../dev/core/src/AudioV2/webAudio/components/spatialWebAudioUpdaterComponent.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAE5D,gBAAgB;AAChB,MAAM,OAAO,gCAAgC;IAOzC,gBAAgB;IAChB,YAAmB,MAA8B,EAAE,UAAmB,EAAE,aAAqB;QAPrF,gBAAW,GAAG,IAAI,CAAC;QACnB,oBAAe,GAAW,CAAC,CAAC;QAEpC,gBAAgB;QACT,kBAAa,GAAG,CAAC,CAAC;QAIrB,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,OAAO;QACX,CAAC;QAED,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC,MAAM,MAAM,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;gBACpB,OAAO;YACX,CAAC;YAED,IAAI,UAAU,GAAG,KAAK,CAAC;YAEvB,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;gBACzB,MAAM,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC;gBAC9B,IAAI,IAAI,CAAC,eAAe,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;oBAC1E,UAAU,GAAG,IAAI,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;YAC/B,CAAC;YAED,IAAI,CAAC,UAAU,EAAE,CAAC;gBACd,MAAM,CAAC,MAAM,EAAE,CAAC;YACpB,CAAC;YAED,qBAAqB,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,CAAC;QACF,qBAAqB,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAED,gBAAgB;IACT,OAAO;QACV,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC7B,CAAC;CACJ","sourcesContent":["import { PrecisionDate } from \"../../../Misc/precisionDate\";\n\n/** @internal */\nexport class _SpatialWebAudioUpdaterComponent {\n    private _autoUpdate = true;\n    private _lastUpdateTime: number = 0;\n\n    /** @internal */\n    public minUpdateTime = 0;\n\n    /** @internal */\n    public constructor(parent: { update: () => void }, autoUpdate: boolean, minUpdateTime: number) {\n        if (!autoUpdate) {\n            return;\n        }\n\n        this.minUpdateTime = minUpdateTime;\n\n        const update = () => {\n            if (!this._autoUpdate) {\n                return;\n            }\n\n            let skipUpdate = false;\n\n            if (0 < this.minUpdateTime) {\n                const now = PrecisionDate.Now;\n                if (this._lastUpdateTime && now - this._lastUpdateTime < this.minUpdateTime) {\n                    skipUpdate = true;\n                }\n                this._lastUpdateTime = now;\n            }\n\n            if (!skipUpdate) {\n                parent.update();\n            }\n\n            requestAnimationFrame(update);\n        };\n        requestAnimationFrame(update);\n    }\n\n    /** @internal */\n    public dispose(): void {\n        this._autoUpdate = false;\n    }\n}\n"]}