{"version":3,"file":"flowGraphMathCombineExtractBlocks.js","sourceRoot":"","sources":["../../../../../../../dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphMathCombineExtractBlocks.ts"],"names":[],"mappings":"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","sourcesContent":["import type { FlowGraphContext } from \"core/FlowGraph/flowGraphContext\";\nimport { FlowGraphCachedOperationBlock } from \"../flowGraphCachedOperationBlock\";\nimport {\n    RichTypeMatrix,\n    RichTypeMatrix2D,\n    RichTypeMatrix3D,\n    RichTypeNumber,\n    RichTypeVector2,\n    RichTypeVector3,\n    RichTypeVector4,\n    type RichType,\n} from \"core/FlowGraph/flowGraphRichTypes\";\nimport { FlowGraphBlock, type IFlowGraphBlockConfiguration } from \"core/FlowGraph/flowGraphBlock\";\nimport { Matrix, Vector2, Vector3, Vector4 } from \"core/Maths/math.vector\";\nimport type { Nullable } from \"core/types\";\nimport { FlowGraphBlockNames } from \"../../flowGraphBlockNames\";\nimport { RegisterClass } from \"core/Misc/typeStore\";\nimport { FlowGraphMatrix2D, FlowGraphMatrix3D } from \"core/FlowGraph/CustomTypes/flowGraphMatrix\";\n\nabstract class FlowGraphMathCombineBlock<ResultT> extends FlowGraphCachedOperationBlock<ResultT> {\n    /**\n     * Base class for blocks that combine multiple numeric inputs into a single result.\n     * Handles registering data inputs and managing cached outputs.\n     * @param numberOfInputs The number of input values to combine.\n     * @param type The type of the result.\n     * @param config The block configuration.\n     */\n    constructor(numberOfInputs: number, type: RichType<ResultT>, config?: IFlowGraphBlockConfiguration) {\n        super(type, config);\n        for (let i = 0; i < numberOfInputs; i++) {\n            this.registerDataInput(`input_${i}`, RichTypeNumber, 0);\n        }\n    }\n}\n\n/**\n * Abstract class representing a flow graph block that extracts multiple outputs from a single input.\n */\nabstract class FlowGraphMathExtractBlock<InputT> extends FlowGraphBlock {\n    /**\n     * Creates an instance of FlowGraphMathExtractBlock.\n     *\n     * @param numberOfOutputs - The number of outputs to be extracted from the input.\n     * @param type - The type of the input data.\n     * @param config - Optional configuration for the flow graph block.\n     */\n    constructor(numberOfOutputs: number, type: RichType<InputT>, config?: IFlowGraphBlockConfiguration) {\n        super(config);\n        this.registerDataInput(\"input\", type);\n        for (let i = 0; i < numberOfOutputs; i++) {\n            this.registerDataOutput(`output_${i}`, RichTypeNumber, 0);\n        }\n    }\n}\n/**\n * Combines two floats into a new Vector2\n */\nexport class FlowGraphCombineVector2Block extends FlowGraphMathCombineBlock<Vector2> {\n    constructor(config?: IFlowGraphBlockConfiguration) {\n        super(2, RichTypeVector2, config);\n    }\n\n    /**\n     * @internal\n     * Combines two floats into a new Vector2\n     */\n    public override _doOperation(context: FlowGraphContext): Vector2 {\n        if (!context._hasExecutionVariable(this, \"cachedVector\")) {\n            context._setExecutionVariable(this, \"cachedVector\", new Vector2());\n        }\n        const vector = context._getExecutionVariable<Nullable<Vector2>>(this, \"cachedVector\", null) as Vector2;\n        vector.set(this.getDataInput(\"input_0\")!.getValue(context), this.getDataInput(\"input_1\")!.getValue(context));\n        return vector;\n    }\n\n    public override getClassName(): string {\n        return FlowGraphBlockNames.CombineVector2;\n    }\n}\n\nRegisterClass(FlowGraphBlockNames.CombineVector2, FlowGraphCombineVector2Block);\n\n/**\n * Combines three floats into a new Vector3\n */\nexport class FlowGraphCombineVector3Block extends FlowGraphMathCombineBlock<Vector3> {\n    constructor(config?: IFlowGraphBlockConfiguration) {\n        super(3, RichTypeVector3, config);\n    }\n\n    public override _doOperation(context: FlowGraphContext): Vector3 {\n        if (!context._hasExecutionVariable(this, \"cachedVector\")) {\n            context._setExecutionVariable(this, \"cachedVector\", new Vector3());\n        }\n        const vector = context._getExecutionVariable<Nullable<Vector3>>(this, \"cachedVector\", null) as Vector3;\n        vector.set(this.getDataInput(\"input_0\")!.getValue(context), this.getDataInput(\"input_1\")!.getValue(context), this.getDataInput(\"input_2\")!.getValue(context));\n        return vector;\n    }\n\n    public override getClassName(): string {\n        return FlowGraphBlockNames.CombineVector3;\n    }\n}\n\nRegisterClass(FlowGraphBlockNames.CombineVector3, FlowGraphCombineVector3Block);\n\n/**\n * Combines four floats into a new Vector4\n */\nexport class FlowGraphCombineVector4Block extends FlowGraphMathCombineBlock<Vector4> {\n    constructor(config?: IFlowGraphBlockConfiguration) {\n        super(4, RichTypeVector4, config);\n    }\n\n    public override _doOperation(context: FlowGraphContext): Vector4 {\n        if (!context._hasExecutionVariable(this, \"cachedVector\")) {\n            context._setExecutionVariable(this, \"cachedVector\", new Vector4());\n        }\n        const vector = context._getExecutionVariable<Nullable<Vector4>>(this, \"cachedVector\", null) as Vector4;\n        vector.set(\n            this.getDataInput(\"input_0\")!.getValue(context),\n            this.getDataInput(\"input_1\")!.getValue(context),\n            this.getDataInput(\"input_2\")!.getValue(context),\n            this.getDataInput(\"input_3\")!.getValue(context)\n        );\n        return vector;\n    }\n\n    public override getClassName(): string {\n        return FlowGraphBlockNames.CombineVector4;\n    }\n}\n\nRegisterClass(FlowGraphBlockNames.CombineVector4, FlowGraphCombineVector4Block);\n\n/**\n * Configuration for the matrix combine blocks.\n */\nexport interface IFlowGraphCombineMatrixBlockConfiguration extends IFlowGraphBlockConfiguration {\n    /**\n     * Whether the input is in column-major order. Default is false.\n     * Note - Babylon's matrix is the same as WebGL's. So unless your matrix requires transformation, you should leave this as false.\n     */\n    inputIsColumnMajor?: boolean;\n}\n\n/**\n * Combines 16 floats into a new Matrix\n *\n * Note that glTF interactivity's combine4x4 uses column-major order, while Babylon.js uses row-major order.\n */\nexport class FlowGraphCombineMatrixBlock extends FlowGraphMathCombineBlock<Matrix> {\n    constructor(config?: IFlowGraphCombineMatrixBlockConfiguration) {\n        super(16, RichTypeMatrix, config);\n    }\n\n    public override _doOperation(context: FlowGraphContext): Matrix {\n        if (!context._hasExecutionVariable(this, \"cachedMatrix\")) {\n            context._setExecutionVariable(this, \"cachedMatrix\", new Matrix());\n        }\n        const matrix = context._getExecutionVariable<Nullable<Matrix>>(this, \"cachedMatrix\", null) as Matrix;\n        if (this.config?.inputIsColumnMajor) {\n            matrix.set(\n                this.getDataInput(\"input_0\")!.getValue(context),\n                this.getDataInput(\"input_4\")!.getValue(context),\n                this.getDataInput(\"input_8\")!.getValue(context),\n                this.getDataInput(\"input_12\")!.getValue(context),\n                this.getDataInput(\"input_1\")!.getValue(context),\n                this.getDataInput(\"input_5\")!.getValue(context),\n                this.getDataInput(\"input_9\")!.getValue(context),\n                this.getDataInput(\"input_13\")!.getValue(context),\n                this.getDataInput(\"input_2\")!.getValue(context),\n                this.getDataInput(\"input_6\")!.getValue(context),\n                this.getDataInput(\"input_10\")!.getValue(context),\n                this.getDataInput(\"input_14\")!.getValue(context),\n                this.getDataInput(\"input_3\")!.getValue(context),\n                this.getDataInput(\"input_7\")!.getValue(context),\n                this.getDataInput(\"input_11\")!.getValue(context),\n                this.getDataInput(\"input_15\")!.getValue(context)\n            );\n        } else {\n            matrix.set(\n                this.getDataInput(\"input_0\")!.getValue(context),\n                this.getDataInput(\"input_1\")!.getValue(context),\n                this.getDataInput(\"input_2\")!.getValue(context),\n                this.getDataInput(\"input_3\")!.getValue(context),\n                this.getDataInput(\"input_4\")!.getValue(context),\n                this.getDataInput(\"input_5\")!.getValue(context),\n                this.getDataInput(\"input_6\")!.getValue(context),\n                this.getDataInput(\"input_7\")!.getValue(context),\n                this.getDataInput(\"input_8\")!.getValue(context),\n                this.getDataInput(\"input_9\")!.getValue(context),\n                this.getDataInput(\"input_10\")!.getValue(context),\n                this.getDataInput(\"input_11\")!.getValue(context),\n                this.getDataInput(\"input_12\")!.getValue(context),\n                this.getDataInput(\"input_13\")!.getValue(context),\n                this.getDataInput(\"input_14\")!.getValue(context),\n                this.getDataInput(\"input_15\")!.getValue(context)\n            );\n        }\n        return matrix;\n    }\n\n    public override getClassName(): string {\n        return FlowGraphBlockNames.CombineMatrix;\n    }\n}\n\nRegisterClass(FlowGraphBlockNames.CombineMatrix, FlowGraphCombineMatrixBlock);\n\n/**\n * Combines 4 floats into a new Matrix\n */\nexport class FlowGraphCombineMatrix2DBlock extends FlowGraphMathCombineBlock<FlowGraphMatrix2D> {\n    constructor(config?: IFlowGraphCombineMatrixBlockConfiguration) {\n        super(4, RichTypeMatrix2D, config);\n    }\n\n    public override _doOperation(context: FlowGraphContext): FlowGraphMatrix2D {\n        if (!context._hasExecutionVariable(this, \"cachedMatrix\")) {\n            context._setExecutionVariable(this, \"cachedMatrix\", new FlowGraphMatrix2D());\n        }\n        const matrix = context._getExecutionVariable<Nullable<FlowGraphMatrix2D>>(this, \"cachedMatrix\", null) as FlowGraphMatrix2D;\n        const array = this.config?.inputIsColumnMajor\n            ? [\n                  // column to row-major\n                  this.getDataInput(\"input_0\")!.getValue(context),\n                  this.getDataInput(\"input_2\")!.getValue(context),\n                  this.getDataInput(\"input_1\")!.getValue(context),\n                  this.getDataInput(\"input_3\")!.getValue(context),\n              ]\n            : [\n                  this.getDataInput(\"input_0\")!.getValue(context),\n                  this.getDataInput(\"input_1\")!.getValue(context),\n                  this.getDataInput(\"input_2\")!.getValue(context),\n                  this.getDataInput(\"input_3\")!.getValue(context),\n              ];\n        matrix.fromArray(array);\n        return matrix;\n    }\n\n    public override getClassName(): string {\n        return FlowGraphBlockNames.CombineMatrix2D;\n    }\n}\n\nRegisterClass(FlowGraphBlockNames.CombineMatrix2D, FlowGraphCombineMatrix2DBlock);\n\n/**\n * Combines 9 floats into a new Matrix3D\n */\nexport class FlowGraphCombineMatrix3DBlock extends FlowGraphMathCombineBlock<FlowGraphMatrix3D> {\n    constructor(config?: IFlowGraphCombineMatrixBlockConfiguration) {\n        super(9, RichTypeMatrix3D, config);\n    }\n\n    public override _doOperation(context: FlowGraphContext): FlowGraphMatrix3D {\n        if (!context._hasExecutionVariable(this, \"cachedMatrix\")) {\n            context._setExecutionVariable(this, \"cachedMatrix\", new FlowGraphMatrix3D());\n        }\n        const matrix = context._getExecutionVariable<Nullable<FlowGraphMatrix3D>>(this, \"cachedMatrix\", null) as FlowGraphMatrix3D;\n        const array = this.config?.inputIsColumnMajor\n            ? [\n                  // column to row major\n                  this.getDataInput(\"input_0\")!.getValue(context),\n                  this.getDataInput(\"input_3\")!.getValue(context),\n                  this.getDataInput(\"input_6\")!.getValue(context),\n                  this.getDataInput(\"input_1\")!.getValue(context),\n                  this.getDataInput(\"input_4\")!.getValue(context),\n                  this.getDataInput(\"input_7\")!.getValue(context),\n                  this.getDataInput(\"input_2\")!.getValue(context),\n                  this.getDataInput(\"input_5\")!.getValue(context),\n                  this.getDataInput(\"input_8\")!.getValue(context),\n              ]\n            : [\n                  this.getDataInput(\"input_0\")!.getValue(context),\n                  this.getDataInput(\"input_1\")!.getValue(context),\n                  this.getDataInput(\"input_2\")!.getValue(context),\n                  this.getDataInput(\"input_3\")!.getValue(context),\n                  this.getDataInput(\"input_4\")!.getValue(context),\n                  this.getDataInput(\"input_5\")!.getValue(context),\n                  this.getDataInput(\"input_6\")!.getValue(context),\n                  this.getDataInput(\"input_7\")!.getValue(context),\n                  this.getDataInput(\"input_8\")!.getValue(context),\n              ];\n        matrix.fromArray(array);\n        return matrix;\n    }\n\n    public override getClassName(): string {\n        return FlowGraphBlockNames.CombineMatrix3D;\n    }\n}\n\nRegisterClass(FlowGraphBlockNames.CombineMatrix3D, FlowGraphCombineMatrix3DBlock);\n\n/**\n * Extracts two floats from a Vector2\n */\nexport class FlowGraphExtractVector2Block extends FlowGraphMathExtractBlock<Vector2> {\n    constructor(config?: IFlowGraphBlockConfiguration) {\n        super(2, RichTypeVector2, config);\n    }\n\n    public override _updateOutputs(context: FlowGraphContext): void {\n        let input = this.getDataInput(\"input\")?.getValue(context) as Vector2;\n        if (!input) {\n            input = Vector2.Zero();\n            this.getDataInput(\"input\")!.setValue(input, context);\n        }\n        this.getDataOutput(\"output_0\")!.setValue(input.x, context);\n        this.getDataOutput(\"output_1\")!.setValue(input.y, context);\n    }\n\n    public override getClassName(): string {\n        return FlowGraphBlockNames.ExtractVector2;\n    }\n}\n\nRegisterClass(FlowGraphBlockNames.ExtractVector2, FlowGraphExtractVector2Block);\n\n/**\n * Extracts three floats from a Vector3\n */\nexport class FlowGraphExtractVector3Block extends FlowGraphMathExtractBlock<Vector3> {\n    constructor(config?: IFlowGraphBlockConfiguration) {\n        super(3, RichTypeVector3, config);\n    }\n    public override _updateOutputs(context: FlowGraphContext): void {\n        let input = this.getDataInput(\"input\")?.getValue(context) as Vector3;\n        if (!input) {\n            input = Vector3.Zero();\n            this.getDataInput(\"input\")!.setValue(input, context);\n        }\n        this.getDataOutput(\"output_0\")!.setValue(input.x, context);\n        this.getDataOutput(\"output_1\")!.setValue(input.y, context);\n        this.getDataOutput(\"output_2\")!.setValue(input.z, context);\n    }\n\n    public override getClassName(): string {\n        return FlowGraphBlockNames.ExtractVector3;\n    }\n}\n\nRegisterClass(FlowGraphBlockNames.ExtractVector3, FlowGraphExtractVector3Block);\n\n/**\n * Extracts four floats from a Vector4\n */\nexport class FlowGraphExtractVector4Block extends FlowGraphMathExtractBlock<Vector4> {\n    constructor(config?: IFlowGraphBlockConfiguration) {\n        super(4, RichTypeVector4, config);\n    }\n    public override _updateOutputs(context: FlowGraphContext): void {\n        let input = this.getDataInput(\"input\")?.getValue(context) as Vector4;\n        if (!input) {\n            input = Vector4.Zero();\n            this.getDataInput(\"input\")!.setValue(input, context);\n        }\n        this.getDataOutput(\"output_0\")!.setValue(input.x, context);\n        this.getDataOutput(\"output_1\")!.setValue(input.y, context);\n        this.getDataOutput(\"output_2\")!.setValue(input.z, context);\n        this.getDataOutput(\"output_3\")!.setValue(input.w, context);\n    }\n\n    public override getClassName(): string {\n        return FlowGraphBlockNames.ExtractVector4;\n    }\n}\n\nRegisterClass(FlowGraphBlockNames.ExtractVector4, FlowGraphExtractVector4Block);\n\n/**\n * Extracts 16 floats from a Matrix\n */\nexport class FlowGraphExtractMatrixBlock extends FlowGraphMathExtractBlock<Matrix> {\n    constructor(config?: IFlowGraphBlockConfiguration) {\n        super(16, RichTypeMatrix, config);\n    }\n    public override _updateOutputs(context: FlowGraphContext): void {\n        let input = this.getDataInput(\"input\")?.getValue(context) as Matrix;\n        if (!input) {\n            input = Matrix.Identity();\n            this.getDataInput(\"input\")!.setValue(input, context);\n        }\n        for (let i = 0; i < 16; i++) {\n            this.getDataOutput(`output_${i}`)!.setValue(input.m[i], context);\n        }\n    }\n\n    public override getClassName(): string {\n        return FlowGraphBlockNames.ExtractMatrix;\n    }\n}\n\nRegisterClass(FlowGraphBlockNames.ExtractMatrix, FlowGraphExtractMatrixBlock);\n\n/**\n * Extracts 4 floats from a Matrix2D\n */\nexport class FlowGraphExtractMatrix2DBlock extends FlowGraphMathExtractBlock<FlowGraphMatrix2D> {\n    constructor(config?: IFlowGraphBlockConfiguration) {\n        super(4, RichTypeMatrix2D, config);\n    }\n    public override _updateOutputs(context: FlowGraphContext): void {\n        let input = this.getDataInput(\"input\")?.getValue(context) as FlowGraphMatrix2D;\n        if (!input) {\n            input = new FlowGraphMatrix2D();\n            this.getDataInput(\"input\")!.setValue(input, context);\n        }\n        for (let i = 0; i < 4; i++) {\n            this.getDataOutput(`output_${i}`)!.setValue(input.m[i], context);\n        }\n    }\n\n    public override getClassName(): string {\n        return FlowGraphBlockNames.ExtractMatrix2D;\n    }\n}\n\nRegisterClass(FlowGraphBlockNames.ExtractMatrix2D, FlowGraphExtractMatrix2DBlock);\n\n/**\n * Extracts 4 floats from a Matrix2D\n */\nexport class FlowGraphExtractMatrix3DBlock extends FlowGraphMathExtractBlock<FlowGraphMatrix3D> {\n    constructor(config?: IFlowGraphBlockConfiguration) {\n        super(9, RichTypeMatrix3D, config);\n    }\n    public override _updateOutputs(context: FlowGraphContext): void {\n        let input = this.getDataInput(\"input\")?.getValue(context) as FlowGraphMatrix3D;\n        if (!input) {\n            input = new FlowGraphMatrix3D();\n            this.getDataInput(\"input\")!.setValue(input, context);\n        }\n        for (let i = 0; i < 9; i++) {\n            this.getDataOutput(`output_${i}`)!.setValue(input.m[i], context);\n        }\n    }\n\n    public override getClassName(): string {\n        return FlowGraphBlockNames.ExtractMatrix3D;\n    }\n}\n\nRegisterClass(FlowGraphBlockNames.ExtractMatrix3D, FlowGraphExtractMatrix3DBlock);\n"]}