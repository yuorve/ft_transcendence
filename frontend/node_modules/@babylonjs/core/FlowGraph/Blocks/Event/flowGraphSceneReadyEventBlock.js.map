{"version":3,"file":"flowGraphSceneReadyEventBlock.js","sourceRoot":"","sources":["../../../../../../dev/core/src/FlowGraph/Blocks/Event/flowGraphSceneReadyEventBlock.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,2BAA2B,CAAC;AAEhE,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AAGxD;;GAEG;AACH,MAAM,OAAO,6BAA8B,SAAQ,mBAAmB;IAAtE;;QACoB,iBAAY,GAAW,CAAC,CAAC,CAAC;QAEjB,SAAI,oDAAqD;IAkBtF,CAAC;IAhBmB,aAAa,CAAC,OAAyB,EAAE,QAAa;QAClE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC;IAChB,CAAC;IACe,oBAAoB,CAAC,OAAyB;QAC1D,QAAQ;IACZ,CAAC;IACe,mBAAmB,CAAC,OAAyB;QACzD,QAAQ;IACZ,CAAC;IACD;;OAEG;IACa,YAAY;QACxB,iFAA2C;IAC/C,CAAC;CACJ;AACD,aAAa,4EAAsC,6BAA6B,CAAC,CAAC","sourcesContent":["import { FlowGraphEventBlock } from \"../../flowGraphEventBlock\";\r\nimport type { FlowGraphContext } from \"core/FlowGraph/flowGraphContext\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport { FlowGraphBlockNames } from \"../flowGraphBlockNames\";\r\nimport { FlowGraphEventType } from \"core/FlowGraph/flowGraphEventType\";\r\n/**\r\n * Block that triggers when a scene is ready.\r\n */\r\nexport class FlowGraphSceneReadyEventBlock extends FlowGraphEventBlock {\r\n    public override initPriority: number = -1;\r\n\r\n    public override readonly type: FlowGraphEventType = FlowGraphEventType.SceneReady;\r\n\r\n    public override _executeEvent(context: FlowGraphContext, _payload: any): boolean {\r\n        this._execute(context);\r\n        return true;\r\n    }\r\n    public override _preparePendingTasks(context: FlowGraphContext): void {\r\n        // no-op\r\n    }\r\n    public override _cancelPendingTasks(context: FlowGraphContext): void {\r\n        // no-op\r\n    }\r\n    /**\r\n     * @returns class name of the block.\r\n     */\r\n    public override getClassName() {\r\n        return FlowGraphBlockNames.SceneReadyEvent;\r\n    }\r\n}\r\nRegisterClass(FlowGraphBlockNames.SceneReadyEvent, FlowGraphSceneReadyEventBlock);\r\n"]}