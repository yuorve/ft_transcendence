{"version":3,"file":"ssrPostProcessBlock.js","sourceRoot":"","sources":["../../../../../../../dev/core/src/FrameGraph/Node/Blocks/PostProcesses/ssrPostProcessBlock.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\r\n    Scene,\r\n    FrameGraph,\r\n    NodeRenderGraphConnectionPoint,\r\n    NodeRenderGraphBuildState,\r\n    FrameGraphTextureHandle,\r\n    Camera,\r\n    NodeRenderGraphGeometryRendererBlock,\r\n    // eslint-disable-next-line import/no-internal-modules\r\n} from \"core/index\";\r\nimport { Constants } from \"core/Engines/constants\";\r\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\r\nimport { NodeRenderGraphBlockConnectionPointTypes } from \"../../Types/nodeRenderGraphTypes\";\r\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../../../../Decorators/nodeDecorator\";\r\nimport { FrameGraphSSRRenderingPipelineTask } from \"../../../Tasks/PostProcesses/ssrRenderingPipelineTask\";\r\nimport { NodeRenderGraphBasePostProcessBlock } from \"./basePostProcessBlock\";\r\n\r\n/**\r\n * Block that implements the SSR post process\r\n */\r\nexport class NodeRenderGraphSSRPostProcessBlock extends NodeRenderGraphBasePostProcessBlock {\r\n    protected override _frameGraphTask: FrameGraphSSRRenderingPipelineTask;\r\n\r\n    /**\r\n     * Gets the frame graph task associated with this block\r\n     */\r\n    public override get task() {\r\n        return this._frameGraphTask;\r\n    }\r\n\r\n    /**\r\n     * Create a new NodeRenderGraphSSRPostProcessBlock\r\n     * @param name defines the block name\r\n     * @param frameGraph defines the hosting frame graph\r\n     * @param scene defines the hosting scene\r\n     * @param textureType The texture type used by the different post processes created by SSR (default: Constants.TEXTURETYPE_UNSIGNED_BYTE)\r\n     */\r\n    public constructor(name: string, frameGraph: FrameGraph, scene: Scene, textureType = Constants.TEXTURETYPE_UNSIGNED_BYTE) {\r\n        super(name, frameGraph, scene);\r\n\r\n        this._additionalConstructionParameters = [textureType];\r\n\r\n        this.registerInput(\"camera\", NodeRenderGraphBlockConnectionPointTypes.Camera);\r\n        this.registerInput(\"geomDepth\", NodeRenderGraphBlockConnectionPointTypes.AutoDetect);\r\n        this.registerInput(\"geomNormal\", NodeRenderGraphBlockConnectionPointTypes.AutoDetect);\r\n        this.registerInput(\"geomReflectivity\", NodeRenderGraphBlockConnectionPointTypes.TextureReflectivity);\r\n        this.registerInput(\"geomBackDepth\", NodeRenderGraphBlockConnectionPointTypes.AutoDetect, true);\r\n\r\n        this.geomNormal.addExcludedConnectionPointFromAllowedTypes(\r\n            NodeRenderGraphBlockConnectionPointTypes.TextureWorldNormal | NodeRenderGraphBlockConnectionPointTypes.TextureViewNormal\r\n        );\r\n        this.geomDepth.addExcludedConnectionPointFromAllowedTypes(\r\n            NodeRenderGraphBlockConnectionPointTypes.TextureScreenDepth | NodeRenderGraphBlockConnectionPointTypes.TextureViewDepth\r\n        );\r\n        this.geomBackDepth.addExcludedConnectionPointFromAllowedTypes(\r\n            NodeRenderGraphBlockConnectionPointTypes.TextureScreenDepth | NodeRenderGraphBlockConnectionPointTypes.TextureViewDepth\r\n        );\r\n\r\n        this._finalizeInputOutputRegistering();\r\n\r\n        this._frameGraphTask = new FrameGraphSSRRenderingPipelineTask(this.name, frameGraph, textureType);\r\n    }\r\n\r\n    private _createTask(textureType: number) {\r\n        const sourceSamplingMode = this.sourceSamplingMode;\r\n        const maxDistance = this.maxDistance;\r\n        const step = this.step;\r\n        const thickness = this.thickness;\r\n        const strength = this.strength;\r\n        const reflectionSpecularFalloffExponent = this.reflectionSpecularFalloffExponent;\r\n        const maxSteps = this.maxSteps;\r\n        const roughnessFactor = this.roughnessFactor;\r\n        const selfCollisionNumSkip = this.selfCollisionNumSkip;\r\n        const reflectivityThreshold = this.reflectivityThreshold;\r\n        const ssrDownsample = this.ssrDownsample;\r\n        const blurDispersionStrength = this.blurDispersionStrength;\r\n        const blurDownsample = this.blurDownsample;\r\n        const enableSmoothReflections = this.enableSmoothReflections;\r\n        const attenuateScreenBorders = this.attenuateScreenBorders;\r\n        const attenuateIntersectionDistance = this.attenuateIntersectionDistance;\r\n        const attenuateIntersectionIterations = this.attenuateIntersectionIterations;\r\n        const attenuateFacingCamera = this.attenuateFacingCamera;\r\n        const attenuateBackfaceReflection = this.attenuateBackfaceReflection;\r\n        const clipToFrustum = this.clipToFrustum;\r\n        const enableAutomaticThicknessComputation = this.enableAutomaticThicknessComputation;\r\n        const useFresnel = this.useFresnel;\r\n        const inputTextureColorIsInGammaSpace = this.inputTextureColorIsInGammaSpace;\r\n        const generateOutputInGammaSpace = this.generateOutputInGammaSpace;\r\n        const debug = this.debug;\r\n\r\n        this._frameGraphTask.dispose();\r\n        this._frameGraphTask = new FrameGraphSSRRenderingPipelineTask(this.name, this._frameGraph, textureType);\r\n\r\n        this.sourceSamplingMode = sourceSamplingMode;\r\n        this.maxDistance = maxDistance;\r\n        this.step = step;\r\n        this.thickness = thickness;\r\n        this.strength = strength;\r\n        this.reflectionSpecularFalloffExponent = reflectionSpecularFalloffExponent;\r\n        this.maxSteps = maxSteps;\r\n        this.roughnessFactor = roughnessFactor;\r\n        this.selfCollisionNumSkip = selfCollisionNumSkip;\r\n        this.reflectivityThreshold = reflectivityThreshold;\r\n        this.ssrDownsample = ssrDownsample;\r\n        this.blurDispersionStrength = blurDispersionStrength;\r\n        this.blurDownsample = blurDownsample;\r\n        this.enableSmoothReflections = enableSmoothReflections;\r\n        this.attenuateScreenBorders = attenuateScreenBorders;\r\n        this.attenuateIntersectionDistance = attenuateIntersectionDistance;\r\n        this.attenuateIntersectionIterations = attenuateIntersectionIterations;\r\n        this.attenuateFacingCamera = attenuateFacingCamera;\r\n        this.attenuateBackfaceReflection = attenuateBackfaceReflection;\r\n        this.clipToFrustum = clipToFrustum;\r\n        this.useFresnel = useFresnel;\r\n        this.enableAutomaticThicknessComputation = enableAutomaticThicknessComputation;\r\n        this.inputTextureColorIsInGammaSpace = inputTextureColorIsInGammaSpace;\r\n        this.generateOutputInGammaSpace = generateOutputInGammaSpace;\r\n        this.debug = debug;\r\n\r\n        this._additionalConstructionParameters = [textureType];\r\n    }\r\n\r\n    /** The texture type used by the different post processes created by SSR */\r\n    @editableInPropertyPage(\"Texture type\", PropertyTypeForEdition.TextureType, \"SSR\")\r\n    public get textureType() {\r\n        return this._frameGraphTask.textureType;\r\n    }\r\n\r\n    public set textureType(value: number) {\r\n        this._createTask(value);\r\n    }\r\n\r\n    /** Gets or sets a boolean indicating if the effect should be rendered in debug mode */\r\n    @editableInPropertyPage(\"Debug\", PropertyTypeForEdition.Boolean, \"SSR\")\r\n    public get debug() {\r\n        return this._frameGraphTask.ssr.debug;\r\n    }\r\n\r\n    public set debug(value: boolean) {\r\n        this._frameGraphTask.ssr.debug = value;\r\n    }\r\n\r\n    /** Gets or sets the current reflection strength. 1.0 is an ideal value but can be increased/decreased for particular results */\r\n    @editableInPropertyPage(\"Strength\", PropertyTypeForEdition.Float, \"SSR\", { min: 0, max: 5 })\r\n    public get strength() {\r\n        return this._frameGraphTask.ssr.strength;\r\n    }\r\n\r\n    public set strength(value: number) {\r\n        this._frameGraphTask.ssr.strength = value;\r\n    }\r\n\r\n    /** Gets or sets the falloff exponent used to compute the reflection strength. Higher values lead to fainter reflections */\r\n    @editableInPropertyPage(\"Reflection exponent\", PropertyTypeForEdition.Float, \"SSR\", { min: 0, max: 5 })\r\n    public get reflectionSpecularFalloffExponent() {\r\n        return this._frameGraphTask.ssr.reflectionSpecularFalloffExponent;\r\n    }\r\n\r\n    public set reflectionSpecularFalloffExponent(value: number) {\r\n        this._frameGraphTask.ssr.reflectionSpecularFalloffExponent = value;\r\n    }\r\n\r\n    /** Gets or sets the minimum value for one of the reflectivity component of the material to consider it for SSR */\r\n    @editableInPropertyPage(\"Reflectivity threshold\", PropertyTypeForEdition.Float, \"SSR\", { min: 0, max: 1 })\r\n    public get reflectivityThreshold() {\r\n        return this._frameGraphTask.ssr.reflectivityThreshold;\r\n    }\r\n\r\n    public set reflectivityThreshold(value: number) {\r\n        this._frameGraphTask.ssr.reflectivityThreshold = value;\r\n    }\r\n\r\n    /** Gets or sets the thickness value used as tolerance when computing the intersection between the reflected ray and the scene */\r\n    @editableInPropertyPage(\"Thickness\", PropertyTypeForEdition.Float, \"SSR\", { min: 0, max: 10 })\r\n    public get thickness() {\r\n        return this._frameGraphTask.ssr.thickness;\r\n    }\r\n\r\n    public set thickness(value: number) {\r\n        this._frameGraphTask.ssr.thickness = value;\r\n    }\r\n\r\n    /** Gets or sets the step size used to iterate until the effect finds the color of the reflection's pixel */\r\n    @editableInPropertyPage(\"Step\", PropertyTypeForEdition.Int, \"SSR\", { min: 1, max: 50 })\r\n    public get step() {\r\n        return this._frameGraphTask.ssr.step;\r\n    }\r\n\r\n    public set step(value: number) {\r\n        this._frameGraphTask.ssr.step = value;\r\n    }\r\n\r\n    /** Gets or sets whether or not smoothing reflections is enabled */\r\n    @editableInPropertyPage(\"Smooth reflections\", PropertyTypeForEdition.Boolean, \"SSR\")\r\n    public get enableSmoothReflections() {\r\n        return this._frameGraphTask.ssr.enableSmoothReflections;\r\n    }\r\n\r\n    public set enableSmoothReflections(value: boolean) {\r\n        this._frameGraphTask.ssr.enableSmoothReflections = value;\r\n    }\r\n\r\n    /** Maximum number of steps during the ray marching process after which we consider an intersection could not be found */\r\n    @editableInPropertyPage(\"Max steps\", PropertyTypeForEdition.Int, \"SSR\", { min: 1, max: 3000 })\r\n    public get maxSteps() {\r\n        return this._frameGraphTask.ssr.maxSteps;\r\n    }\r\n\r\n    public set maxSteps(value: number) {\r\n        this._frameGraphTask.ssr.maxSteps = value;\r\n    }\r\n\r\n    /** Gets or sets the max distance used to define how far we look for reflection during the ray-marching on the reflected ray */\r\n    @editableInPropertyPage(\"Max distance\", PropertyTypeForEdition.Float, \"SSR\", { min: 1, max: 3000 })\r\n    public get maxDistance() {\r\n        return this._frameGraphTask.ssr.maxDistance;\r\n    }\r\n\r\n    public set maxDistance(value: number) {\r\n        this._frameGraphTask.ssr.maxDistance = value;\r\n    }\r\n\r\n    /** Gets or sets the factor applied when computing roughness */\r\n    @editableInPropertyPage(\"Roughness factor\", PropertyTypeForEdition.Float, \"SSR\", { min: 0, max: 1 })\r\n    public get roughnessFactor() {\r\n        return this._frameGraphTask.ssr.roughnessFactor;\r\n    }\r\n\r\n    public set roughnessFactor(value: number) {\r\n        this._frameGraphTask.ssr.roughnessFactor = value;\r\n    }\r\n\r\n    /** Number of steps to skip at start when marching the ray to avoid self collisions */\r\n    @editableInPropertyPage(\"Self collision skips\", PropertyTypeForEdition.Int, \"SSR\", { min: 1, max: 10 })\r\n    public get selfCollisionNumSkip() {\r\n        return this._frameGraphTask.ssr.selfCollisionNumSkip;\r\n    }\r\n\r\n    public set selfCollisionNumSkip(value: number) {\r\n        this._frameGraphTask.ssr.selfCollisionNumSkip = value;\r\n    }\r\n\r\n    /** Gets or sets the downsample factor used to reduce the size of the texture used to compute the SSR contribution */\r\n    @editableInPropertyPage(\"SSR downsample\", PropertyTypeForEdition.Int, \"SSR\", { min: 0, max: 5 })\r\n    public get ssrDownsample() {\r\n        return this._frameGraphTask.ssr.ssrDownsample;\r\n    }\r\n\r\n    public set ssrDownsample(value: number) {\r\n        this._frameGraphTask.ssr.ssrDownsample = value;\r\n    }\r\n\r\n    /** Gets or sets a boolean indicating if the ray should be clipped to the frustum */\r\n    @editableInPropertyPage(\"Clip to frustum\", PropertyTypeForEdition.Boolean, \"SSR\")\r\n    public get clipToFrustum() {\r\n        return this._frameGraphTask.ssr.clipToFrustum;\r\n    }\r\n\r\n    public set clipToFrustum(value: boolean) {\r\n        this._frameGraphTask.ssr.clipToFrustum = value;\r\n    }\r\n\r\n    /** Gets or sets a boolean defining if geometry thickness should be computed automatically */\r\n    @editableInPropertyPage(\"Automatic thickness computation\", PropertyTypeForEdition.Boolean, \"SSR\")\r\n    public get enableAutomaticThicknessComputation() {\r\n        return this._frameGraphTask.ssr.enableAutomaticThicknessComputation;\r\n    }\r\n\r\n    public set enableAutomaticThicknessComputation(value: boolean) {\r\n        this._frameGraphTask.ssr.enableAutomaticThicknessComputation = value;\r\n    }\r\n\r\n    /** Gets or sets a boolean indicating whether the blending between the current color pixel and the reflection color should be done with a Fresnel coefficient */\r\n    @editableInPropertyPage(\"Use Fresnel\", PropertyTypeForEdition.Boolean, \"SSR\")\r\n    public get useFresnel() {\r\n        return this._frameGraphTask.ssr.useFresnel;\r\n    }\r\n\r\n    public set useFresnel(value: boolean) {\r\n        this._frameGraphTask.ssr.useFresnel = value;\r\n    }\r\n\r\n    /** Gets or sets the blur dispersion strength. Set this value to 0 to disable blurring */\r\n    @editableInPropertyPage(\"Strength\", PropertyTypeForEdition.Float, \"Blur\", { min: 0, max: 0.15 })\r\n    public get blurDispersionStrength() {\r\n        return this._frameGraphTask.ssr.blurDispersionStrength;\r\n    }\r\n\r\n    public set blurDispersionStrength(value: number) {\r\n        this._frameGraphTask.ssr.blurDispersionStrength = value;\r\n    }\r\n\r\n    /** Gets or sets the downsample factor used to reduce the size of the textures used to blur the reflection effect */\r\n    @editableInPropertyPage(\"Blur downsample\", PropertyTypeForEdition.Int, \"Blur\", { min: 0, max: 5 })\r\n    public get blurDownsample() {\r\n        return this._frameGraphTask.ssr.blurDownsample;\r\n    }\r\n\r\n    public set blurDownsample(value: number) {\r\n        this._frameGraphTask.ssr.blurDownsample = value;\r\n    }\r\n\r\n    /** Gets or sets a boolean indicating if the reflections should be attenuated at the screen borders */\r\n    @editableInPropertyPage(\"Screen borders\", PropertyTypeForEdition.Boolean, \"Attenuations\")\r\n    public get attenuateScreenBorders() {\r\n        return this._frameGraphTask.ssr.attenuateScreenBorders;\r\n    }\r\n\r\n    public set attenuateScreenBorders(value: boolean) {\r\n        this._frameGraphTask.ssr.attenuateScreenBorders = value;\r\n    }\r\n\r\n    /** Gets or sets a boolean indicating if the reflections should be attenuated according to the distance of the intersection */\r\n    @editableInPropertyPage(\"Distance\", PropertyTypeForEdition.Boolean, \"Attenuations\")\r\n    public get attenuateIntersectionDistance() {\r\n        return this._frameGraphTask.ssr.attenuateIntersectionDistance;\r\n    }\r\n\r\n    public set attenuateIntersectionDistance(value: boolean) {\r\n        this._frameGraphTask.ssr.attenuateIntersectionDistance = value;\r\n    }\r\n\r\n    /** Gets or sets a boolean indicating if the reflections should be attenuated according to the number of iterations performed to find the intersection */\r\n    @editableInPropertyPage(\"Step iterations\", PropertyTypeForEdition.Boolean, \"Attenuations\")\r\n    public get attenuateIntersectionIterations() {\r\n        return this._frameGraphTask.ssr.attenuateIntersectionIterations;\r\n    }\r\n\r\n    public set attenuateIntersectionIterations(value: boolean) {\r\n        this._frameGraphTask.ssr.attenuateIntersectionIterations = value;\r\n    }\r\n\r\n    /** Gets or sets a boolean indicating if the reflections should be attenuated when the reflection ray is facing the camera (the view direction) */\r\n    @editableInPropertyPage(\"Facing camera\", PropertyTypeForEdition.Boolean, \"Attenuations\")\r\n    public get attenuateFacingCamera() {\r\n        return this._frameGraphTask.ssr.attenuateFacingCamera;\r\n    }\r\n\r\n    public set attenuateFacingCamera(value: boolean) {\r\n        this._frameGraphTask.ssr.attenuateFacingCamera = value;\r\n    }\r\n\r\n    /** Gets or sets a boolean indicating if the backface reflections should be attenuated */\r\n    @editableInPropertyPage(\"Backface reflections\", PropertyTypeForEdition.Boolean, \"Attenuations\")\r\n    public get attenuateBackfaceReflection() {\r\n        return this._frameGraphTask.ssr.attenuateBackfaceReflection;\r\n    }\r\n\r\n    public set attenuateBackfaceReflection(value: boolean) {\r\n        this._frameGraphTask.ssr.attenuateBackfaceReflection = value;\r\n    }\r\n\r\n    /** Gets or sets a boolean defining if the input color texture is in gamma space */\r\n    @editableInPropertyPage(\"Input is in gamma space\", PropertyTypeForEdition.Boolean, \"Color space\")\r\n    public get inputTextureColorIsInGammaSpace() {\r\n        return this._frameGraphTask.ssr.inputTextureColorIsInGammaSpace;\r\n    }\r\n\r\n    public set inputTextureColorIsInGammaSpace(value: boolean) {\r\n        this._frameGraphTask.ssr.inputTextureColorIsInGammaSpace = value;\r\n    }\r\n\r\n    /** Gets or sets a boolean defining if the output color texture generated by the SSR pipeline should be in gamma space */\r\n    @editableInPropertyPage(\"Output to gamma space\", PropertyTypeForEdition.Boolean, \"Color space\")\r\n    public get generateOutputInGammaSpace() {\r\n        return this._frameGraphTask.ssr.generateOutputInGammaSpace;\r\n    }\r\n\r\n    public set generateOutputInGammaSpace(value: boolean) {\r\n        this._frameGraphTask.ssr.generateOutputInGammaSpace = value;\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public override getClassName() {\r\n        return \"NodeRenderGraphSSRPostProcessBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the camera input component\r\n     */\r\n    public get camera(): NodeRenderGraphConnectionPoint {\r\n        return this._inputs[2];\r\n    }\r\n\r\n    /**\r\n     * Gets the geometry depth input component\r\n     */\r\n    public get geomDepth(): NodeRenderGraphConnectionPoint {\r\n        return this._inputs[3];\r\n    }\r\n\r\n    /**\r\n     * Gets the geometry normal input component\r\n     */\r\n    public get geomNormal(): NodeRenderGraphConnectionPoint {\r\n        return this._inputs[4];\r\n    }\r\n\r\n    /**\r\n     * Gets the geometry reflectivity input component\r\n     */\r\n    public get geomReflectivity(): NodeRenderGraphConnectionPoint {\r\n        return this._inputs[5];\r\n    }\r\n\r\n    /**\r\n     * Gets the geometry back depth input component\r\n     */\r\n    public get geomBackDepth(): NodeRenderGraphConnectionPoint {\r\n        return this._inputs[6];\r\n    }\r\n\r\n    protected override _buildBlock(state: NodeRenderGraphBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        this._frameGraphTask.normalTexture = this.geomNormal.connectedPoint?.value as FrameGraphTextureHandle;\r\n        this._frameGraphTask.depthTexture = this.geomDepth.connectedPoint?.value as FrameGraphTextureHandle;\r\n        this._frameGraphTask.reflectivityTexture = this.geomReflectivity.connectedPoint?.value as FrameGraphTextureHandle;\r\n        this._frameGraphTask.backDepthTexture = this.geomBackDepth.connectedPoint?.value as FrameGraphTextureHandle;\r\n        this._frameGraphTask.camera = this.camera.connectedPoint?.value as Camera;\r\n\r\n        if (this.enableAutomaticThicknessComputation) {\r\n            if (!this._frameGraphTask.backDepthTexture) {\r\n                throw new Error(`SSR post process \"${this.name}\": Automatic thickness computation requires a back depth texture to be connected!`);\r\n            }\r\n\r\n            const geomBackDepthOwnerBlock = this.geomBackDepth.connectedPoint!.ownerBlock!;\r\n            if (geomBackDepthOwnerBlock.getClassName() === \"NodeRenderGraphGeometryRendererBlock\") {\r\n                const geometryBackFaceRendererBlock = geomBackDepthOwnerBlock as NodeRenderGraphGeometryRendererBlock;\r\n                if (!geometryBackFaceRendererBlock.reverseCulling) {\r\n                    throw new Error(\r\n                        `SSR post process \"${this.name}\": Automatic thickness computation requires the geometry renderer block for the back depth texture to have reverse culling enabled!`\r\n                    );\r\n                }\r\n\r\n                if (this._frameGraphTask.depthTexture) {\r\n                    const geomDepthOwnerBlock = this.geomDepth.connectedPoint!.ownerBlock!;\r\n                    if (geomDepthOwnerBlock.getClassName() === \"NodeRenderGraphGeometryRendererBlock\") {\r\n                        const geomDepthConnectionPointType = this.geomDepth.connectedPoint!.type;\r\n                        const geomBackDepthConnectionPointType = this.geomBackDepth.connectedPoint!.type;\r\n\r\n                        if (geomDepthConnectionPointType !== geomBackDepthConnectionPointType) {\r\n                            throw new Error(\r\n                                `SSR post process \"${this.name}\": Automatic thickness computation requires that geomDepth and geomBackDepth have the same type (view or screen space depth)!`\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.geomNormal.connectedPoint) {\r\n            if (this.geomNormal.connectedPoint.type === NodeRenderGraphBlockConnectionPointTypes.TextureWorldNormal) {\r\n                this._frameGraphTask.ssr.normalsAreInWorldSpace = true;\r\n                this._frameGraphTask.ssr.normalsAreUnsigned = true;\r\n            }\r\n        }\r\n        if (this.geomDepth.connectedPoint) {\r\n            if (this.geomDepth.connectedPoint.type === NodeRenderGraphBlockConnectionPointTypes.TextureScreenDepth) {\r\n                this._frameGraphTask.ssr.useScreenspaceDepth = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected override _dumpPropertiesCode() {\r\n        const codes: string[] = [];\r\n        codes.push(`${this._codeVariableName}.debug = ${this.debug};`);\r\n        codes.push(`${this._codeVariableName}.strength = ${this.strength};`);\r\n        codes.push(`${this._codeVariableName}.reflectionSpecularFalloffExponent = ${this.reflectionSpecularFalloffExponent};`);\r\n        codes.push(`${this._codeVariableName}.reflectivityThreshold = ${this.reflectivityThreshold};`);\r\n        codes.push(`${this._codeVariableName}.thickness = ${this.thickness};`);\r\n        codes.push(`${this._codeVariableName}.step = ${this.step};`);\r\n        codes.push(`${this._codeVariableName}.enableSmoothReflections = ${this.enableSmoothReflections};`);\r\n        codes.push(`${this._codeVariableName}.maxSteps = ${this.maxSteps};`);\r\n        codes.push(`${this._codeVariableName}.maxDistance = ${this.maxDistance};`);\r\n        codes.push(`${this._codeVariableName}.roughnessFactor = ${this.roughnessFactor};`);\r\n        codes.push(`${this._codeVariableName}.selfCollisionNumSkip = ${this.selfCollisionNumSkip};`);\r\n        codes.push(`${this._codeVariableName}.ssrDownsample = ${this.ssrDownsample};`);\r\n        codes.push(`${this._codeVariableName}.clipToFrustum = ${this.clipToFrustum};`);\r\n        codes.push(`${this._codeVariableName}.useFresnel = ${this.useFresnel};`);\r\n        codes.push(`${this._codeVariableName}.enableAutomaticThicknessComputation = ${this.enableAutomaticThicknessComputation};`);\r\n        codes.push(`${this._codeVariableName}.blurDispersionStrength = ${this.blurDispersionStrength};`);\r\n        codes.push(`${this._codeVariableName}.blurDownsample = ${this.blurDownsample};`);\r\n        codes.push(`${this._codeVariableName}.attenuateScreenBorders = ${this.attenuateScreenBorders};`);\r\n        codes.push(`${this._codeVariableName}.attenuateIntersectionDistance = ${this.attenuateIntersectionDistance};`);\r\n        codes.push(`${this._codeVariableName}.attenuateIntersectionIterations = ${this.attenuateIntersectionIterations};`);\r\n        codes.push(`${this._codeVariableName}.attenuateFacingCamera = ${this.attenuateFacingCamera};`);\r\n        codes.push(`${this._codeVariableName}.attenuateBackfaceReflection = ${this.attenuateBackfaceReflection};`);\r\n        codes.push(`${this._codeVariableName}.inputTextureColorIsInGammaSpace = ${this.inputTextureColorIsInGammaSpace};`);\r\n        codes.push(`${this._codeVariableName}.generateOutputInGammaSpace = ${this.generateOutputInGammaSpace};`);\r\n        return super._dumpPropertiesCode() + codes.join(\"\\n\");\r\n    }\r\n\r\n    public override serialize(): any {\r\n        const serializationObject = super.serialize();\r\n        serializationObject.debug = this.debug;\r\n        serializationObject.strength = this.strength;\r\n        serializationObject.reflectionSpecularFalloffExponent = this.reflectionSpecularFalloffExponent;\r\n        serializationObject.reflectivityThreshold = this.reflectivityThreshold;\r\n        serializationObject.thickness = this.thickness;\r\n        serializationObject.step = this.step;\r\n        serializationObject.enableSmoothReflections = this.enableSmoothReflections;\r\n        serializationObject.maxSteps = this.maxSteps;\r\n        serializationObject.maxDistance = this.maxDistance;\r\n        serializationObject.roughnessFactor = this.roughnessFactor;\r\n        serializationObject.selfCollisionNumSkip = this.selfCollisionNumSkip;\r\n        serializationObject.ssrDownsample = this.ssrDownsample;\r\n        serializationObject.clipToFrustum = this.clipToFrustum;\r\n        serializationObject.useFresnel = this.useFresnel;\r\n        serializationObject.enableAutomaticThicknessComputation = this.enableAutomaticThicknessComputation;\r\n        serializationObject.blurDispersionStrength = this.blurDispersionStrength;\r\n        serializationObject.blurDownsample = this.blurDownsample;\r\n        serializationObject.attenuateScreenBorders = this.attenuateScreenBorders;\r\n        serializationObject.attenuateIntersectionDistance = this.attenuateIntersectionDistance;\r\n        serializationObject.attenuateIntersectionIterations = this.attenuateIntersectionIterations;\r\n        serializationObject.attenuateFacingCamera = this.attenuateFacingCamera;\r\n        serializationObject.attenuateBackfaceReflection = this.attenuateBackfaceReflection;\r\n        serializationObject.inputTextureColorIsInGammaSpace = this.inputTextureColorIsInGammaSpace;\r\n        serializationObject.generateOutputInGammaSpace = this.generateOutputInGammaSpace;\r\n        return serializationObject;\r\n    }\r\n\r\n    public override _deserialize(serializationObject: any) {\r\n        super._deserialize(serializationObject);\r\n        this.debug = serializationObject.debug;\r\n        this.strength = serializationObject.strength;\r\n        this.reflectionSpecularFalloffExponent = serializationObject.reflectionSpecularFalloffExponent;\r\n        this.reflectivityThreshold = serializationObject.reflectivityThreshold;\r\n        this.thickness = serializationObject.thickness;\r\n        this.step = serializationObject.step;\r\n        this.enableSmoothReflections = serializationObject.enableSmoothReflections;\r\n        this.maxSteps = serializationObject.maxSteps;\r\n        this.maxDistance = serializationObject.maxDistance;\r\n        this.roughnessFactor = serializationObject.roughnessFactor;\r\n        this.selfCollisionNumSkip = serializationObject.selfCollisionNumSkip;\r\n        this.ssrDownsample = serializationObject.ssrDownsample;\r\n        this.clipToFrustum = serializationObject.clipToFrustum;\r\n        this.useFresnel = serializationObject.useFresnel;\r\n        this.enableAutomaticThicknessComputation = serializationObject.enableAutomaticThicknessComputation;\r\n        this.blurDispersionStrength = serializationObject.blurDispersionStrength;\r\n        this.blurDownsample = serializationObject.blurDownsample;\r\n        this.attenuateScreenBorders = serializationObject.attenuateScreenBorders;\r\n        this.attenuateIntersectionDistance = serializationObject.attenuateIntersectionDistance;\r\n        this.attenuateIntersectionIterations = serializationObject.attenuateIntersectionIterations;\r\n        this.attenuateFacingCamera = serializationObject.attenuateFacingCamera;\r\n        this.attenuateBackfaceReflection = serializationObject.attenuateBackfaceReflection;\r\n        this.inputTextureColorIsInGammaSpace = serializationObject.inputTextureColorIsInGammaSpace;\r\n        this.generateOutputInGammaSpace = serializationObject.generateOutputInGammaSpace;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.NodeRenderGraphSSRPostProcessBlock\", NodeRenderGraphSSRPostProcessBlock);\r\n"]}