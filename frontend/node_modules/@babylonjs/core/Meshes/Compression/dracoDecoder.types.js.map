{"version":3,"file":"dracoDecoder.types.js","sourceRoot":"","sources":["../../../../../dev/core/src/Meshes/Compression/dracoDecoder.types.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Decoded Draco mesh data.\n */\nexport interface MeshData {\n    /**\n     * The indices of the mesh. Point clouds will not have indices.\n     */\n    indices?: Uint16Array | Uint32Array;\n    /**\n     * The attributes of the mesh.\n     */\n    attributes: Array<AttributeData>;\n    /**\n     * The total number of vertices in the mesh.\n     */\n    totalVertices: number;\n}\n\n/**\n * @internal\n */\nexport interface AttributeData {\n    kind: string;\n    data: ArrayBufferView;\n    size: number;\n    byteOffset: number;\n    byteStride: number;\n    normalized: boolean;\n}\n\n/**\n * @internal\n */\nexport interface DecodeMeshDoneMessage {\n    id: \"decodeMeshDone\";\n    totalVertices: number;\n}\n\n/**\n * @internal\n */\nexport interface IndicesMessage {\n    id: \"indices\";\n    data: Uint16Array | Uint32Array;\n}\n\n/**\n * @internal\n */\nexport interface AttributeMessage extends AttributeData {\n    id: \"attribute\";\n}\n\n/**\n * @internal\n */\nexport type DecoderMessage = DecodeMeshDoneMessage | IndicesMessage | AttributeMessage;\n"]}