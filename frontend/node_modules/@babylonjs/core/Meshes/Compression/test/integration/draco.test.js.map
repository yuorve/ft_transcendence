{"version":3,"file":"draco.test.js","sourceRoot":"","sources":["../../../../../../../dev/core/src/Meshes/Compression/test/integration/draco.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAElD,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAE1D,QAAQ,CAAC,8BAA8B,EAAE,GAAG,EAAE;IAC1C,QAAQ,CAAC,2EAA2E,EAAE,GAAG,EAAE;QACvF,MAAM,cAAc,GAA6B,EAAE,GAAG,YAAY,CAAC,oBAAoB,EAAE,CAAC;QAC1F,MAAM,OAAO,GAAG,SAAS,CAAC;QAE1B,SAAS,CAAC,GAAG,EAAE;YACX,MAAM,CAAC,YAAY,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpE,MAAM,CAAC,YAAY,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAC/G,MAAM,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACvF,YAAY,CAAC,oBAAoB,GAAG,cAAc,CAAC;QACvD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gEAAgE,EAAE,GAAG,EAAE;YACtE,gBAAgB,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;YAC1D,gBAAgB,CAAC,aAAa,CAAC,OAAO,GAAG;gBACrC,WAAW,EAAE,OAAO;aACvB,CAAC;QACN,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;YAClD,gBAAgB,CAAC,aAAa,GAAG;gBAC7B,OAAO,EAAE;oBACL,WAAW,EAAE,OAAO;iBACvB;aACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { DracoDecoder } from \"../../dracoDecoder\";\nimport type { IDracoCodecConfiguration } from \"../../dracoCodec\";\nimport { DracoCompression } from \"../../dracoCompression\";\n\ndescribe(\"Draco Mesh Compression tests\", () => {\n    describe(\"DracoDecoder's configuration is affected by updates to DracoCompression's\", () => {\n        const originalConfig: IDracoCodecConfiguration = { ...DracoDecoder.DefaultConfiguration };\n        const testUrl = \"testUrl\";\n\n        afterEach(() => {\n            expect(DracoDecoder.DefaultConfiguration.fallbackUrl).toBe(testUrl);\n            expect(DracoDecoder.DefaultConfiguration.fallbackUrl).toBe(DracoCompression.Configuration.decoder.fallbackUrl);\n            expect(DracoDecoder.DefaultConfiguration).toBe(DracoCompression.Configuration.decoder);\n            DracoDecoder.DefaultConfiguration = originalConfig;\n        });\n\n        it(\"updates via DracoCompression.Configuration.decoder.fallbackUrl\", () => {\n            DracoCompression.Configuration.decoder.fallbackUrl = testUrl;\n        });\n\n        it(\"updates via DracoCompression.Configuration.decoder\", () => {\n            DracoCompression.Configuration.decoder = {\n                fallbackUrl: testUrl,\n            };\n        });\n\n        it(\"updates via DracoCompression.Configuration\", () => {\n            DracoCompression.Configuration = {\n                decoder: {\n                    fallbackUrl: testUrl,\n                },\n            };\n        });\n    });\n});\n"]}