{"version":3,"file":"geometryEaseBlock.js","sourceRoot":"","sources":["../../../../../../dev/core/src/Meshes/Node/Blocks/geometryEaseBlock.ts"],"names":[],"mappings":"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","sourcesContent":["import { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport { NodeGeometryBlockConnectionPointTypes } from \"../Enums/nodeGeometryConnectionPointTypes\";\r\nimport { NodeGeometryBlock } from \"../nodeGeometryBlock\";\r\nimport type { NodeGeometryConnectionPoint } from \"../nodeGeometryBlockConnectionPoint\";\r\nimport type { NodeGeometryBuildState } from \"../nodeGeometryBuildState\";\r\nimport { Vector2, Vector3, Vector4 } from \"../../../Maths/math.vector\";\r\nimport { PropertyTypeForEdition, editableInPropertyPage } from \"../../../Decorators/nodeDecorator\";\r\nimport type { EasingFunction } from \"core/Animations/easing\";\r\nimport { BackEase, CircleEase, CubicEase, ElasticEase, ExponentialEase, QuadraticEase, QuarticEase, QuinticEase, SineEase } from \"core/Animations/easing\";\r\n\r\n/**\r\n * Types of easing function supported by the Ease block\r\n */\r\nexport enum GeometryEaseBlockTypes {\r\n    /** EaseInSine */\r\n    EaseInSine,\r\n    /** EaseOutSine */\r\n    EaseOutSine,\r\n    /** EaseInOutSine */\r\n    EaseInOutSine,\r\n    /** EaseInQuad */\r\n    EaseInQuad,\r\n    /** EaseOutQuad */\r\n    EaseOutQuad,\r\n    /** EaseInOutQuad */\r\n    EaseInOutQuad,\r\n    /** EaseInCubic */\r\n    EaseInCubic,\r\n    /** EaseOutCubic */\r\n    EaseOutCubic,\r\n    /** EaseInOutCubic */\r\n    EaseInOutCubic,\r\n    /** EaseInQuart */\r\n    EaseInQuart,\r\n    /** EaseOutQuart */\r\n    EaseOutQuart,\r\n    /** EaseInOutQuart */\r\n    EaseInOutQuart,\r\n    /** EaseInQuint */\r\n    EaseInQuint,\r\n    /** EaseOutQuint */\r\n    EaseOutQuint,\r\n    /** EaseInOutQuint */\r\n    EaseInOutQuint,\r\n    /** EaseInExpo */\r\n    EaseInExpo,\r\n    /** EaseOutExpo */\r\n    EaseOutExpo,\r\n    /** EaseInOutExpo */\r\n    EaseInOutExpo,\r\n    /** EaseInCirc */\r\n    EaseInCirc,\r\n    /** EaseOutCirc */\r\n    EaseOutCirc,\r\n    /** EaseInOutCirc */\r\n    EaseInOutCirc,\r\n    /** EaseInBack */\r\n    EaseInBack,\r\n    /** EaseOutBack */\r\n    EaseOutBack,\r\n    /** EaseInOutBack */\r\n    EaseInOutBack,\r\n    /** EaseInElastic */\r\n    EaseInElastic,\r\n    /** EaseOutElastic */\r\n    EaseOutElastic,\r\n    /** EaseInOutElastic */\r\n    EaseInOutElastic,\r\n}\r\n\r\n/**\r\n * Block used to apply an easing function to floats\r\n */\r\nexport class GeometryEaseBlock extends NodeGeometryBlock {\r\n    private _easingFunction: EasingFunction = new SineEase();\r\n    private _type = GeometryEaseBlockTypes.EaseInOutSine;\r\n    /**\r\n     * Gets or sets the type of the easing functions applied by the block\r\n     */\r\n    @editableInPropertyPage(\"Type\", PropertyTypeForEdition.List, \"ADVANCED\", {\r\n        notifiers: { rebuild: true },\r\n        embedded: true,\r\n        options: [\r\n            { label: \"EaseInSine\", value: GeometryEaseBlockTypes.EaseInSine },\r\n            { label: \"EaseOutSine\", value: GeometryEaseBlockTypes.EaseOutSine },\r\n            { label: \"EaseInOutSine\", value: GeometryEaseBlockTypes.EaseInOutSine },\r\n            { label: \"EaseInQuad\", value: GeometryEaseBlockTypes.EaseInQuad },\r\n            { label: \"EaseOutQuad\", value: GeometryEaseBlockTypes.EaseOutQuad },\r\n            { label: \"EaseInOutQuad\", value: GeometryEaseBlockTypes.EaseInOutQuad },\r\n            { label: \"EaseInCubic\", value: GeometryEaseBlockTypes.EaseInCubic },\r\n            { label: \"EaseOutCubic\", value: GeometryEaseBlockTypes.EaseOutCubic },\r\n            { label: \"EaseInOutCubic\", value: GeometryEaseBlockTypes.EaseInOutCubic },\r\n            { label: \"EaseInQuart\", value: GeometryEaseBlockTypes.EaseInQuart },\r\n            { label: \"EaseOutQuart\", value: GeometryEaseBlockTypes.EaseOutQuart },\r\n            { label: \"EaseInOutQuart\", value: GeometryEaseBlockTypes.EaseInOutQuart },\r\n            { label: \"EaseInQuint\", value: GeometryEaseBlockTypes.EaseInQuint },\r\n            { label: \"EaseOutQuint\", value: GeometryEaseBlockTypes.EaseOutQuint },\r\n            { label: \"EaseInOutQuint\", value: GeometryEaseBlockTypes.EaseInOutQuint },\r\n            { label: \"EaseInExpo\", value: GeometryEaseBlockTypes.EaseInExpo },\r\n            { label: \"EaseOutExpo\", value: GeometryEaseBlockTypes.EaseOutExpo },\r\n            { label: \"EaseInOutExpo\", value: GeometryEaseBlockTypes.EaseInOutExpo },\r\n            { label: \"EaseInCirc\", value: GeometryEaseBlockTypes.EaseInCirc },\r\n            { label: \"EaseOutCirc\", value: GeometryEaseBlockTypes.EaseOutCirc },\r\n            { label: \"EaseInOutCirc\", value: GeometryEaseBlockTypes.EaseInOutCirc },\r\n            { label: \"EaseInBack\", value: GeometryEaseBlockTypes.EaseInBack },\r\n            { label: \"EaseOutBack\", value: GeometryEaseBlockTypes.EaseOutBack },\r\n            { label: \"EaseInOutBack\", value: GeometryEaseBlockTypes.EaseInOutBack },\r\n            { label: \"EaseInElastic\", value: GeometryEaseBlockTypes.EaseInElastic },\r\n            { label: \"EaseOutElastic\", value: GeometryEaseBlockTypes.EaseOutElastic },\r\n            { label: \"EaseInOutElastic\", value: GeometryEaseBlockTypes.EaseInOutElastic },\r\n        ],\r\n    })\r\n    public get type() {\r\n        return this._type;\r\n    }\r\n\r\n    public set type(value: GeometryEaseBlockTypes) {\r\n        if (this._type === value) {\r\n            return;\r\n        }\r\n        this._type = value;\r\n\r\n        switch (this._type) {\r\n            case GeometryEaseBlockTypes.EaseInSine:\r\n                this._easingFunction = new SineEase();\r\n                this._easingFunction.setEasingMode(SineEase.EASINGMODE_EASEIN);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseOutSine:\r\n                this._easingFunction = new SineEase();\r\n                this._easingFunction.setEasingMode(SineEase.EASINGMODE_EASEOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInOutSine:\r\n                this._easingFunction = new SineEase();\r\n                this._easingFunction.setEasingMode(SineEase.EASINGMODE_EASEINOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInQuad:\r\n                this._easingFunction = new QuadraticEase();\r\n                this._easingFunction.setEasingMode(QuadraticEase.EASINGMODE_EASEIN);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseOutQuad:\r\n                this._easingFunction = new QuadraticEase();\r\n                this._easingFunction.setEasingMode(QuadraticEase.EASINGMODE_EASEOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInOutQuad:\r\n                this._easingFunction = new QuadraticEase();\r\n                this._easingFunction.setEasingMode(QuadraticEase.EASINGMODE_EASEINOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInCubic:\r\n                this._easingFunction = new CubicEase();\r\n                this._easingFunction.setEasingMode(CubicEase.EASINGMODE_EASEIN);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseOutCubic:\r\n                this._easingFunction = new CubicEase();\r\n                this._easingFunction.setEasingMode(CubicEase.EASINGMODE_EASEOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInOutCubic:\r\n                this._easingFunction = new CubicEase();\r\n                this._easingFunction.setEasingMode(CubicEase.EASINGMODE_EASEINOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInQuart:\r\n                this._easingFunction = new QuarticEase();\r\n                this._easingFunction.setEasingMode(QuarticEase.EASINGMODE_EASEIN);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseOutQuart:\r\n                this._easingFunction = new QuarticEase();\r\n                this._easingFunction.setEasingMode(QuarticEase.EASINGMODE_EASEOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInOutQuart:\r\n                this._easingFunction = new QuarticEase();\r\n                this._easingFunction.setEasingMode(QuarticEase.EASINGMODE_EASEINOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInQuint:\r\n                this._easingFunction = new QuinticEase();\r\n                this._easingFunction.setEasingMode(QuinticEase.EASINGMODE_EASEIN);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseOutQuint:\r\n                this._easingFunction = new QuinticEase();\r\n                this._easingFunction.setEasingMode(QuinticEase.EASINGMODE_EASEOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInOutQuint:\r\n                this._easingFunction = new QuinticEase();\r\n                this._easingFunction.setEasingMode(QuinticEase.EASINGMODE_EASEINOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInExpo:\r\n                this._easingFunction = new ExponentialEase();\r\n                this._easingFunction.setEasingMode(ExponentialEase.EASINGMODE_EASEIN);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseOutExpo:\r\n                this._easingFunction = new ExponentialEase();\r\n                this._easingFunction.setEasingMode(ExponentialEase.EASINGMODE_EASEOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInOutExpo:\r\n                this._easingFunction = new ExponentialEase();\r\n                this._easingFunction.setEasingMode(ExponentialEase.EASINGMODE_EASEINOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInCirc:\r\n                this._easingFunction = new CircleEase();\r\n                this._easingFunction.setEasingMode(CircleEase.EASINGMODE_EASEIN);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseOutCirc:\r\n                this._easingFunction = new CircleEase();\r\n                this._easingFunction.setEasingMode(CircleEase.EASINGMODE_EASEOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInOutCirc:\r\n                this._easingFunction = new CircleEase();\r\n                this._easingFunction.setEasingMode(CircleEase.EASINGMODE_EASEINOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInBack:\r\n                this._easingFunction = new BackEase();\r\n                this._easingFunction.setEasingMode(BackEase.EASINGMODE_EASEIN);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseOutBack:\r\n                this._easingFunction = new BackEase();\r\n                this._easingFunction.setEasingMode(BackEase.EASINGMODE_EASEOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInOutBack:\r\n                this._easingFunction = new BackEase();\r\n                this._easingFunction.setEasingMode(BackEase.EASINGMODE_EASEINOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInElastic:\r\n                this._easingFunction = new ElasticEase();\r\n                this._easingFunction.setEasingMode(ElasticEase.EASINGMODE_EASEIN);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseOutElastic:\r\n                this._easingFunction = new ElasticEase();\r\n                this._easingFunction.setEasingMode(ElasticEase.EASINGMODE_EASEOUT);\r\n                break;\r\n            case GeometryEaseBlockTypes.EaseInOutElastic:\r\n                this._easingFunction = new ElasticEase();\r\n                this._easingFunction.setEasingMode(ElasticEase.EASINGMODE_EASEINOUT);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a new GeometryEaseBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name);\r\n\r\n        this.registerInput(\"input\", NodeGeometryBlockConnectionPointTypes.AutoDetect);\r\n        this.registerOutput(\"output\", NodeGeometryBlockConnectionPointTypes.BasedOnInput);\r\n\r\n        this._outputs[0]._typeConnectionSource = this._inputs[0];\r\n        this._inputs[0].excludedConnectionPointTypes.push(NodeGeometryBlockConnectionPointTypes.Matrix);\r\n        this._inputs[0].excludedConnectionPointTypes.push(NodeGeometryBlockConnectionPointTypes.Geometry);\r\n        this._inputs[0].excludedConnectionPointTypes.push(NodeGeometryBlockConnectionPointTypes.Texture);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public override getClassName() {\r\n        return \"GeometryEaseBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the input component\r\n     */\r\n    public get input(): NodeGeometryConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeGeometryConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    protected override _buildBlock(state: NodeGeometryBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        if (!this._easingFunction) {\r\n            this.output._storedFunction = null;\r\n            this.output._storedValue = null;\r\n            return;\r\n        }\r\n\r\n        switch (this.input.type) {\r\n            case NodeGeometryBlockConnectionPointTypes.Int:\r\n            case NodeGeometryBlockConnectionPointTypes.Float: {\r\n                this.output._storedFunction = (state) => {\r\n                    const source = this.input.getConnectedValue(state);\r\n                    return this._easingFunction.ease(source);\r\n                };\r\n                break;\r\n            }\r\n            case NodeGeometryBlockConnectionPointTypes.Vector2: {\r\n                this.output._storedFunction = (state) => {\r\n                    const source = this.input.getConnectedValue(state);\r\n                    return new Vector2(this._easingFunction.ease(source.x), this._easingFunction.ease(source.y));\r\n                };\r\n                break;\r\n            }\r\n            case NodeGeometryBlockConnectionPointTypes.Vector3: {\r\n                this.output._storedFunction = (state) => {\r\n                    const source = this.input.getConnectedValue(state);\r\n                    return new Vector3(this._easingFunction.ease(source.x), this._easingFunction.ease(source.y), this._easingFunction.ease(source.z));\r\n                };\r\n                break;\r\n            }\r\n            case NodeGeometryBlockConnectionPointTypes.Vector4: {\r\n                this.output._storedFunction = (state) => {\r\n                    const source = this.input.getConnectedValue(state);\r\n                    return new Vector4(\r\n                        this._easingFunction.ease(source.x),\r\n                        this._easingFunction.ease(source.y),\r\n                        this._easingFunction.ease(source.z),\r\n                        this._easingFunction.ease(source.w)\r\n                    );\r\n                };\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public override serialize(): any {\r\n        const serializationObject = super.serialize();\r\n\r\n        serializationObject.type = this.type;\r\n\r\n        return serializationObject;\r\n    }\r\n\r\n    public override _deserialize(serializationObject: any) {\r\n        super._deserialize(serializationObject);\r\n\r\n        this.type = serializationObject.type;\r\n    }\r\n\r\n    protected override _dumpPropertiesCode() {\r\n        const codeString = super._dumpPropertiesCode() + `${this._codeVariableName}.type = BABYLON.GeometryEaseBlockTypes.${GeometryEaseBlockTypes[this.type]};\\n`;\r\n        return codeString;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.GeometryEaseBlock\", GeometryEaseBlock);\r\n"]}