{"version":3,"file":"deepMerger.js","sourceRoot":"","sources":["../../../../dev/core/src/Misc/deepMerger.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC;;;;GAIG;AACH,MAAM,UAAU,SAAS,CAAmB,GAAG,OAAY;IACvD,MAAM,QAAQ,GAAG,CAAC,GAAY,EAAkC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,CAAC;IAEpG,OAAO,OAAO,CAAC,MAAM,CAA0B,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;QACzD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7B,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YACvB,MAAM,IAAI,GAAI,GAA+B,CAAC,GAAG,CAAC,CAAC;YAEnD,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC7C,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;YACrC,CAAC;iBAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC1C,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACtC,CAAC;iBAAM,CAAC;gBACJ,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;YACrB,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IAChB,CAAC,EAAE,EAAE,CAAM,CAAC;AAChB,CAAC","sourcesContent":["// https://stackoverflow.com/a/48218209\r\n/**\r\n * Merges a series of objects into a single object, deeply.\r\n * @param objects The objects to merge (objects later in the list take precedence).\r\n * @returns The merged object.\r\n */\r\nexport function deepMerge<T extends Object>(...objects: T[]): T {\r\n    const isRecord = (obj: unknown): obj is Record<string, unknown> => !!obj && typeof obj === \"object\";\r\n\r\n    return objects.reduce<Record<string, unknown>>((prev, obj) => {\r\n        Object.keys(obj).forEach((key) => {\r\n            const pVal = prev[key];\r\n            const oVal = (obj as Record<string, unknown>)[key];\r\n\r\n            if (Array.isArray(pVal) && Array.isArray(oVal)) {\r\n                prev[key] = pVal.concat(...oVal);\r\n            } else if (isRecord(pVal) && isRecord(oVal)) {\r\n                prev[key] = deepMerge(pVal, oVal);\r\n            } else {\r\n                prev[key] = oVal;\r\n            }\r\n        });\r\n\r\n        return prev;\r\n    }, {}) as T;\r\n}\r\n"]}