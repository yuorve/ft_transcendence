{"version":3,"file":"thinSSRBlurCombinerPostProcess.js","sourceRoot":"","sources":["../../../../dev/core/src/PostProcesses/thinSSRBlurCombinerPostProcess.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line import/no-internal-modules\r\nimport type { Nullable, AbstractEngine, EffectWrapperCreationOptions, Camera } from \"core/index\";\r\nimport { EffectWrapper } from \"../Materials/effectRenderer\";\r\nimport { Engine } from \"../Engines/engine\";\r\nimport { TmpVectors } from \"../Maths/math.vector\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ThinSSRBlurCombinerPostProcess extends EffectWrapper {\r\n    public static readonly FragmentUrl = \"screenSpaceReflection2BlurCombiner\";\r\n\r\n    public static readonly Uniforms = [\r\n        \"strength\",\r\n        \"reflectionSpecularFalloffExponent\",\r\n        \"reflectivityThreshold\",\r\n        \"projection\",\r\n        \"invProjectionMatrix\",\r\n        \"nearPlaneZ\",\r\n        \"farPlaneZ\",\r\n        \"view\",\r\n    ];\r\n\r\n    public static readonly Samplers = [\"textureSampler\", \"depthSampler\", \"normalSampler\", \"mainSampler\", \"reflectivitySampler\"];\r\n\r\n    protected override _gatherImports(useWebGPU: boolean, list: Promise<any>[]) {\r\n        if (useWebGPU) {\r\n            this._webGPUReady = true;\r\n            list.push(import(\"../ShadersWGSL/screenSpaceReflection2BlurCombiner.fragment\"));\r\n        } else {\r\n            list.push(import(\"../Shaders/screenSpaceReflection2BlurCombiner.fragment\"));\r\n        }\r\n    }\r\n\r\n    constructor(name: string, engine: Nullable<AbstractEngine> = null, options?: EffectWrapperCreationOptions) {\r\n        super({\r\n            ...options,\r\n            name,\r\n            engine: engine || Engine.LastCreatedEngine!,\r\n            useShaderStore: true,\r\n            useAsPostProcess: true,\r\n            fragmentShader: ThinSSRBlurCombinerPostProcess.FragmentUrl,\r\n            uniforms: ThinSSRBlurCombinerPostProcess.Uniforms,\r\n            samplers: ThinSSRBlurCombinerPostProcess.Samplers,\r\n        });\r\n\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    public strength = 1;\r\n\r\n    public reflectionSpecularFalloffExponent = 1;\r\n\r\n    public camera: Nullable<Camera> = null;\r\n\r\n    private _useFresnel = false;\r\n\r\n    public get useFresnel() {\r\n        return this._useFresnel;\r\n    }\r\n\r\n    public set useFresnel(fresnel: boolean) {\r\n        if (this._useFresnel === fresnel) {\r\n            return;\r\n        }\r\n\r\n        this._useFresnel = fresnel;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _useScreenspaceDepth = false;\r\n\r\n    public get useScreenspaceDepth() {\r\n        return this._useScreenspaceDepth;\r\n    }\r\n\r\n    public set useScreenspaceDepth(value: boolean) {\r\n        if (this._useScreenspaceDepth === value) {\r\n            return;\r\n        }\r\n\r\n        this._useScreenspaceDepth = value;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _inputTextureColorIsInGammaSpace = true;\r\n\r\n    public get inputTextureColorIsInGammaSpace(): boolean {\r\n        return this._inputTextureColorIsInGammaSpace;\r\n    }\r\n\r\n    public set inputTextureColorIsInGammaSpace(gammaSpace: boolean) {\r\n        if (this._inputTextureColorIsInGammaSpace === gammaSpace) {\r\n            return;\r\n        }\r\n\r\n        this._inputTextureColorIsInGammaSpace = gammaSpace;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _generateOutputInGammaSpace = true;\r\n\r\n    public get generateOutputInGammaSpace(): boolean {\r\n        return this._generateOutputInGammaSpace;\r\n    }\r\n\r\n    public set generateOutputInGammaSpace(gammaSpace: boolean) {\r\n        if (this._generateOutputInGammaSpace === gammaSpace) {\r\n            return;\r\n        }\r\n\r\n        this._generateOutputInGammaSpace = gammaSpace;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _debug = false;\r\n\r\n    public get debug(): boolean {\r\n        return this._debug;\r\n    }\r\n\r\n    public set debug(value: boolean) {\r\n        if (this._debug === value) {\r\n            return;\r\n        }\r\n\r\n        this._debug = value;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _reflectivityThreshold = 0.04;\r\n\r\n    public get reflectivityThreshold() {\r\n        return this._reflectivityThreshold;\r\n    }\r\n\r\n    public set reflectivityThreshold(threshold: number) {\r\n        if (threshold === this._reflectivityThreshold) {\r\n            return;\r\n        }\r\n\r\n        if ((threshold === 0 && this._reflectivityThreshold !== 0) || (threshold !== 0 && this._reflectivityThreshold === 0)) {\r\n            this._reflectivityThreshold = threshold;\r\n            this._updateEffectDefines();\r\n        } else {\r\n            this._reflectivityThreshold = threshold;\r\n        }\r\n    }\r\n\r\n    private _normalsAreInWorldSpace = false;\r\n\r\n    public get normalsAreInWorldSpace() {\r\n        return this._normalsAreInWorldSpace;\r\n    }\r\n\r\n    public set normalsAreInWorldSpace(value: boolean) {\r\n        if (this._normalsAreInWorldSpace === value) {\r\n            return;\r\n        }\r\n\r\n        this._normalsAreInWorldSpace = value;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _normalsAreUnsigned = false;\r\n\r\n    public get normalsAreUnsigned() {\r\n        return this._normalsAreUnsigned;\r\n    }\r\n\r\n    public set normalsAreUnsigned(value: boolean) {\r\n        if (this._normalsAreUnsigned === value) {\r\n            return;\r\n        }\r\n\r\n        this._normalsAreUnsigned = value;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    public override bind() {\r\n        super.bind();\r\n\r\n        const effect = this._drawWrapper.effect!;\r\n\r\n        effect.setFloat(\"strength\", this.strength);\r\n        effect.setFloat(\"reflectionSpecularFalloffExponent\", this.reflectionSpecularFalloffExponent);\r\n        effect.setFloat(\"reflectivityThreshold\", this.reflectivityThreshold);\r\n\r\n        if (this.useFresnel && this.camera) {\r\n            const projectionMatrix = this.camera.getProjectionMatrix();\r\n\r\n            projectionMatrix.invertToRef(TmpVectors.Matrix[0]);\r\n\r\n            effect.setMatrix(\"projection\", projectionMatrix);\r\n            effect.setMatrix(\"invProjectionMatrix\", TmpVectors.Matrix[0]);\r\n            effect.setMatrix(\"view\", this.camera.getViewMatrix());\r\n\r\n            if (this.useScreenspaceDepth) {\r\n                effect.setFloat(\"nearPlaneZ\", this.camera.minZ);\r\n                effect.setFloat(\"farPlaneZ\", this.camera.maxZ);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _updateEffectDefines() {\r\n        let defines = \"\";\r\n\r\n        if (this._debug) {\r\n            defines += \"#define SSRAYTRACE_DEBUG\\n\";\r\n        }\r\n        if (this._inputTextureColorIsInGammaSpace) {\r\n            defines += \"#define SSR_INPUT_IS_GAMMA_SPACE\\n\";\r\n        }\r\n        if (this._generateOutputInGammaSpace) {\r\n            defines += \"#define SSR_OUTPUT_IS_GAMMA_SPACE\\n\";\r\n        }\r\n        if (this._useFresnel) {\r\n            defines += \"#define SSR_BLEND_WITH_FRESNEL\\n\";\r\n        }\r\n        if (this._useScreenspaceDepth) {\r\n            defines += \"#define SSRAYTRACE_SCREENSPACE_DEPTH\\n\";\r\n        }\r\n        if (this._reflectivityThreshold === 0) {\r\n            defines += \"#define SSR_DISABLE_REFLECTIVITY_TEST\\n\";\r\n        }\r\n        if (this._normalsAreInWorldSpace) {\r\n            defines += \"#define SSR_NORMAL_IS_IN_WORLDSPACE\\n\";\r\n        }\r\n        if (this._normalsAreUnsigned) {\r\n            defines += \"#define SSR_DECODE_NORMAL\\n\";\r\n        }\r\n\r\n        this.updateEffect(defines);\r\n    }\r\n}\r\n"]}