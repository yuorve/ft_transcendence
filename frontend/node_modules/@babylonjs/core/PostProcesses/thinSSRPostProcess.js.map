{"version":3,"file":"thinSSRPostProcess.js","sourceRoot":"","sources":["../../../../dev/core/src/PostProcesses/thinSSRPostProcess.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line import/no-internal-modules\r\nimport type { Nullable, Scene, CubeTexture, Camera, EffectWrapperCreationOptions } from \"core/index\";\r\nimport { Constants } from \"core/Engines/constants\";\r\nimport { Engine } from \"core/Engines/engine\";\r\nimport { EffectWrapper } from \"core/Materials/effectRenderer\";\r\nimport { ShaderLanguage } from \"core/Materials/shaderLanguage\";\r\nimport { Vector3, Matrix, Quaternion, TmpVectors } from \"core/Maths/math.vector\";\r\n\r\nconst trs = Matrix.Compose(new Vector3(0.5, 0.5, 0.5), Quaternion.Identity(), new Vector3(0.5, 0.5, 0.5));\r\nconst trsWebGPU = Matrix.Compose(new Vector3(0.5, 0.5, 1), Quaternion.Identity(), new Vector3(0.5, 0.5, 0));\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ThinSSRPostProcess extends EffectWrapper {\r\n    /**\r\n     * The fragment shader url\r\n     */\r\n    public static readonly FragmentUrl = \"screenSpaceReflection2\";\r\n\r\n    /**\r\n     * The list of uniforms used by the effect\r\n     */\r\n    public static readonly Uniforms = [\r\n        \"projection\",\r\n        \"invProjectionMatrix\",\r\n        \"view\",\r\n        \"invView\",\r\n        \"thickness\",\r\n        \"reflectionSpecularFalloffExponent\",\r\n        \"strength\",\r\n        \"stepSize\",\r\n        \"maxSteps\",\r\n        \"roughnessFactor\",\r\n        \"projectionPixel\",\r\n        \"nearPlaneZ\",\r\n        \"farPlaneZ\",\r\n        \"maxDistance\",\r\n        \"selfCollisionNumSkip\",\r\n        \"vReflectionPosition\",\r\n        \"vReflectionSize\",\r\n        \"backSizeFactor\",\r\n        \"reflectivityThreshold\",\r\n    ];\r\n\r\n    public static readonly Samplers = [\"textureSampler\", \"normalSampler\", \"reflectivitySampler\", \"depthSampler\", \"envCubeSampler\", \"backDepthSampler\"];\r\n\r\n    protected override _gatherImports(useWebGPU: boolean, list: Promise<any>[]) {\r\n        if (useWebGPU) {\r\n            this._webGPUReady = true;\r\n            list.push(import(\"../ShadersWGSL/screenSpaceReflection2.fragment\"));\r\n        } else {\r\n            list.push(import(\"../Shaders/screenSpaceReflection2.fragment\"));\r\n        }\r\n    }\r\n\r\n    public isSSRSupported = true;\r\n\r\n    public maxDistance = 1000.0;\r\n\r\n    public step = 1.0;\r\n\r\n    public thickness = 0.5;\r\n\r\n    public strength = 1;\r\n\r\n    public reflectionSpecularFalloffExponent = 1;\r\n\r\n    public maxSteps = 1000.0;\r\n\r\n    public roughnessFactor = 0.2;\r\n\r\n    public selfCollisionNumSkip = 1;\r\n\r\n    private _reflectivityThreshold = 0.04;\r\n\r\n    public get reflectivityThreshold() {\r\n        return this._reflectivityThreshold;\r\n    }\r\n\r\n    public set reflectivityThreshold(threshold: number) {\r\n        if (threshold === this._reflectivityThreshold) {\r\n            return;\r\n        }\r\n\r\n        if ((threshold === 0 && this._reflectivityThreshold !== 0) || (threshold !== 0 && this._reflectivityThreshold === 0)) {\r\n            this._reflectivityThreshold = threshold;\r\n            this._updateEffectDefines();\r\n        } else {\r\n            this._reflectivityThreshold = threshold;\r\n        }\r\n    }\r\n\r\n    private _useBlur = false;\r\n\r\n    public get useBlur() {\r\n        return this._useBlur;\r\n    }\r\n\r\n    public set useBlur(blur: boolean) {\r\n        if (this._useBlur === blur) {\r\n            return;\r\n        }\r\n\r\n        this._useBlur = blur;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _enableSmoothReflections = false;\r\n\r\n    public get enableSmoothReflections(): boolean {\r\n        return this._enableSmoothReflections;\r\n    }\r\n\r\n    public set enableSmoothReflections(enabled: boolean) {\r\n        if (enabled === this._enableSmoothReflections) {\r\n            return;\r\n        }\r\n\r\n        this._enableSmoothReflections = enabled;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _environmentTexture: Nullable<CubeTexture>;\r\n\r\n    public get environmentTexture() {\r\n        return this._environmentTexture;\r\n    }\r\n\r\n    public set environmentTexture(texture: Nullable<CubeTexture>) {\r\n        this._environmentTexture = texture;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _environmentTextureIsProbe = false;\r\n\r\n    public get environmentTextureIsProbe(): boolean {\r\n        return this._environmentTextureIsProbe;\r\n    }\r\n\r\n    public set environmentTextureIsProbe(isProbe: boolean) {\r\n        this._environmentTextureIsProbe = isProbe;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _attenuateScreenBorders = true;\r\n\r\n    public get attenuateScreenBorders() {\r\n        return this._attenuateScreenBorders;\r\n    }\r\n\r\n    public set attenuateScreenBorders(attenuate: boolean) {\r\n        if (this._attenuateScreenBorders === attenuate) {\r\n            return;\r\n        }\r\n        this._attenuateScreenBorders = attenuate;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _attenuateIntersectionDistance = true;\r\n\r\n    public get attenuateIntersectionDistance() {\r\n        return this._attenuateIntersectionDistance;\r\n    }\r\n\r\n    public set attenuateIntersectionDistance(attenuate: boolean) {\r\n        if (this._attenuateIntersectionDistance === attenuate) {\r\n            return;\r\n        }\r\n        this._attenuateIntersectionDistance = attenuate;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _attenuateIntersectionIterations = true;\r\n\r\n    public get attenuateIntersectionIterations() {\r\n        return this._attenuateIntersectionIterations;\r\n    }\r\n\r\n    public set attenuateIntersectionIterations(attenuate: boolean) {\r\n        if (this._attenuateIntersectionIterations === attenuate) {\r\n            return;\r\n        }\r\n        this._attenuateIntersectionIterations = attenuate;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _attenuateFacingCamera = false;\r\n\r\n    public get attenuateFacingCamera() {\r\n        return this._attenuateFacingCamera;\r\n    }\r\n\r\n    public set attenuateFacingCamera(attenuate: boolean) {\r\n        if (this._attenuateFacingCamera === attenuate) {\r\n            return;\r\n        }\r\n        this._attenuateFacingCamera = attenuate;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _attenuateBackfaceReflection = false;\r\n\r\n    public get attenuateBackfaceReflection() {\r\n        return this._attenuateBackfaceReflection;\r\n    }\r\n\r\n    public set attenuateBackfaceReflection(attenuate: boolean) {\r\n        if (this._attenuateBackfaceReflection === attenuate) {\r\n            return;\r\n        }\r\n        this._attenuateBackfaceReflection = attenuate;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _clipToFrustum = true;\r\n\r\n    public get clipToFrustum() {\r\n        return this._clipToFrustum;\r\n    }\r\n\r\n    public set clipToFrustum(clip: boolean) {\r\n        if (this._clipToFrustum === clip) {\r\n            return;\r\n        }\r\n        this._clipToFrustum = clip;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _useFresnel = false;\r\n\r\n    public get useFresnel() {\r\n        return this._useFresnel;\r\n    }\r\n\r\n    public set useFresnel(fresnel: boolean) {\r\n        if (this._useFresnel === fresnel) {\r\n            return;\r\n        }\r\n        this._useFresnel = fresnel;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _enableAutomaticThicknessComputation = false;\r\n\r\n    public get enableAutomaticThicknessComputation(): boolean {\r\n        return this._enableAutomaticThicknessComputation;\r\n    }\r\n\r\n    public set enableAutomaticThicknessComputation(automatic: boolean) {\r\n        if (this._enableAutomaticThicknessComputation === automatic) {\r\n            return;\r\n        }\r\n\r\n        this._enableAutomaticThicknessComputation = automatic;\r\n\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _inputTextureColorIsInGammaSpace = true;\r\n\r\n    public get inputTextureColorIsInGammaSpace(): boolean {\r\n        return this._inputTextureColorIsInGammaSpace;\r\n    }\r\n\r\n    public set inputTextureColorIsInGammaSpace(gammaSpace: boolean) {\r\n        if (this._inputTextureColorIsInGammaSpace === gammaSpace) {\r\n            return;\r\n        }\r\n\r\n        this._inputTextureColorIsInGammaSpace = gammaSpace;\r\n\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _generateOutputInGammaSpace = true;\r\n\r\n    public get generateOutputInGammaSpace(): boolean {\r\n        return this._generateOutputInGammaSpace;\r\n    }\r\n\r\n    public set generateOutputInGammaSpace(gammaSpace: boolean) {\r\n        if (this._generateOutputInGammaSpace === gammaSpace) {\r\n            return;\r\n        }\r\n\r\n        this._generateOutputInGammaSpace = gammaSpace;\r\n\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _debug = false;\r\n\r\n    public get debug(): boolean {\r\n        return this._debug;\r\n    }\r\n\r\n    public set debug(value: boolean) {\r\n        if (this._debug === value) {\r\n            return;\r\n        }\r\n\r\n        this._debug = value;\r\n\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _textureWidth = 0;\r\n\r\n    public get textureWidth() {\r\n        return this._textureWidth;\r\n    }\r\n\r\n    public set textureWidth(width: number) {\r\n        if (this._textureWidth === width) {\r\n            return;\r\n        }\r\n        this._textureWidth = width;\r\n    }\r\n\r\n    private _textureHeight = 0;\r\n\r\n    public get textureHeight() {\r\n        return this._textureHeight;\r\n    }\r\n\r\n    public set textureHeight(height: number) {\r\n        if (this._textureHeight === height) {\r\n            return;\r\n        }\r\n        this._textureHeight = height;\r\n    }\r\n\r\n    public camera: Nullable<Camera> = null;\r\n\r\n    private _useScreenspaceDepth = false;\r\n\r\n    public get useScreenspaceDepth() {\r\n        return this._useScreenspaceDepth;\r\n    }\r\n\r\n    public set useScreenspaceDepth(value: boolean) {\r\n        if (this._useScreenspaceDepth === value) {\r\n            return;\r\n        }\r\n\r\n        this._useScreenspaceDepth = value;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _normalsAreInWorldSpace = false;\r\n\r\n    public get normalsAreInWorldSpace() {\r\n        return this._normalsAreInWorldSpace;\r\n    }\r\n\r\n    public set normalsAreInWorldSpace(value: boolean) {\r\n        if (this._normalsAreInWorldSpace === value) {\r\n            return;\r\n        }\r\n\r\n        this._normalsAreInWorldSpace = value;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _normalsAreUnsigned = false;\r\n\r\n    public get normalsAreUnsigned() {\r\n        return this._normalsAreUnsigned;\r\n    }\r\n\r\n    public set normalsAreUnsigned(value: boolean) {\r\n        if (this._normalsAreUnsigned === value) {\r\n            return;\r\n        }\r\n\r\n        this._normalsAreUnsigned = value;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    private _scene: Scene;\r\n\r\n    constructor(name: string, scene: Scene, options?: EffectWrapperCreationOptions) {\r\n        super({\r\n            ...options,\r\n            name,\r\n            engine: scene.getEngine() || Engine.LastCreatedEngine!,\r\n            useShaderStore: true,\r\n            useAsPostProcess: true,\r\n            fragmentShader: ThinSSRPostProcess.FragmentUrl,\r\n            uniforms: ThinSSRPostProcess.Uniforms,\r\n            samplers: ThinSSRPostProcess.Samplers,\r\n            shaderLanguage: scene.getEngine().isWebGPU ? ShaderLanguage.WGSL : ShaderLanguage.GLSL,\r\n        });\r\n\r\n        this._scene = scene;\r\n        this._updateEffectDefines();\r\n    }\r\n\r\n    public override bind() {\r\n        super.bind();\r\n\r\n        const effect = this._drawWrapper.effect!;\r\n\r\n        const camera = this.camera;\r\n        if (!camera) {\r\n            return;\r\n        }\r\n\r\n        const viewMatrix = camera.getViewMatrix();\r\n        const projectionMatrix = camera.getProjectionMatrix();\r\n\r\n        projectionMatrix.invertToRef(TmpVectors.Matrix[0]);\r\n        viewMatrix.invertToRef(TmpVectors.Matrix[1]);\r\n\r\n        effect.setMatrix(\"projection\", projectionMatrix);\r\n        effect.setMatrix(\"view\", viewMatrix);\r\n        effect.setMatrix(\"invView\", TmpVectors.Matrix[1]);\r\n        effect.setMatrix(\"invProjectionMatrix\", TmpVectors.Matrix[0]);\r\n        effect.setFloat(\"thickness\", this.thickness);\r\n        effect.setFloat(\"reflectionSpecularFalloffExponent\", this.reflectionSpecularFalloffExponent);\r\n        effect.setFloat(\"strength\", this.strength);\r\n        effect.setFloat(\"stepSize\", this.step);\r\n        effect.setFloat(\"maxSteps\", this.maxSteps);\r\n        effect.setFloat(\"roughnessFactor\", this.roughnessFactor);\r\n        effect.setFloat(\"nearPlaneZ\", camera.minZ);\r\n        effect.setFloat(\"farPlaneZ\", camera.maxZ);\r\n        effect.setFloat(\"maxDistance\", this.maxDistance);\r\n        effect.setFloat(\"selfCollisionNumSkip\", this.selfCollisionNumSkip);\r\n        effect.setFloat(\"reflectivityThreshold\", this._reflectivityThreshold);\r\n\r\n        Matrix.ScalingToRef(this.textureWidth, this.textureHeight, 1, TmpVectors.Matrix[2]);\r\n\r\n        projectionMatrix.multiplyToRef(this._scene.getEngine().isWebGPU ? trsWebGPU : trs, TmpVectors.Matrix[3]);\r\n\r\n        TmpVectors.Matrix[3].multiplyToRef(TmpVectors.Matrix[2], TmpVectors.Matrix[4]);\r\n\r\n        effect.setMatrix(\"projectionPixel\", TmpVectors.Matrix[4]);\r\n\r\n        if (this._environmentTexture) {\r\n            effect.setTexture(\"envCubeSampler\", this._environmentTexture);\r\n\r\n            if (this._environmentTexture.boundingBoxSize) {\r\n                effect.setVector3(\"vReflectionPosition\", this._environmentTexture.boundingBoxPosition);\r\n                effect.setVector3(\"vReflectionSize\", this._environmentTexture.boundingBoxSize);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _updateEffectDefines() {\r\n        const defines: string[] = [];\r\n\r\n        if (this.isSSRSupported) {\r\n            defines.push(\"#define SSR_SUPPORTED\");\r\n        }\r\n        if (this._enableSmoothReflections) {\r\n            defines.push(\"#define SSRAYTRACE_ENABLE_REFINEMENT\");\r\n        }\r\n        if (this._scene.useRightHandedSystem) {\r\n            defines.push(\"#define SSRAYTRACE_RIGHT_HANDED_SCENE\");\r\n        }\r\n        if (this._useScreenspaceDepth) {\r\n            defines.push(\"#define SSRAYTRACE_SCREENSPACE_DEPTH\");\r\n        }\r\n        if (this._environmentTexture) {\r\n            defines.push(\"#define SSR_USE_ENVIRONMENT_CUBE\");\r\n            if (this._environmentTexture.boundingBoxSize) {\r\n                defines.push(\"#define SSR_USE_LOCAL_REFLECTIONMAP_CUBIC\");\r\n            }\r\n            if (this._environmentTexture.gammaSpace) {\r\n                defines.push(\"#define SSR_ENVIRONMENT_CUBE_IS_GAMMASPACE\");\r\n            }\r\n        }\r\n        if (this._environmentTextureIsProbe) {\r\n            defines.push(\"#define SSR_INVERTCUBICMAP\");\r\n        }\r\n        if (this._enableAutomaticThicknessComputation) {\r\n            defines.push(\"#define SSRAYTRACE_USE_BACK_DEPTHBUFFER\");\r\n        }\r\n        if (this._attenuateScreenBorders) {\r\n            defines.push(\"#define SSR_ATTENUATE_SCREEN_BORDERS\");\r\n        }\r\n        if (this._attenuateIntersectionDistance) {\r\n            defines.push(\"#define SSR_ATTENUATE_INTERSECTION_DISTANCE\");\r\n        }\r\n        if (this._attenuateIntersectionIterations) {\r\n            defines.push(\"#define SSR_ATTENUATE_INTERSECTION_NUMITERATIONS\");\r\n        }\r\n        if (this._attenuateFacingCamera) {\r\n            defines.push(\"#define SSR_ATTENUATE_FACING_CAMERA\");\r\n        }\r\n        if (this._attenuateBackfaceReflection) {\r\n            defines.push(\"#define SSR_ATTENUATE_BACKFACE_REFLECTION\");\r\n        }\r\n        if (this._clipToFrustum) {\r\n            defines.push(\"#define SSRAYTRACE_CLIP_TO_FRUSTUM\");\r\n        }\r\n        if (this.useBlur) {\r\n            defines.push(\"#define SSR_USE_BLUR\");\r\n        }\r\n        if (this._debug) {\r\n            defines.push(\"#define SSRAYTRACE_DEBUG\");\r\n        }\r\n        if (this._inputTextureColorIsInGammaSpace) {\r\n            defines.push(\"#define SSR_INPUT_IS_GAMMA_SPACE\");\r\n        }\r\n        if (this._generateOutputInGammaSpace) {\r\n            defines.push(\"#define SSR_OUTPUT_IS_GAMMA_SPACE\");\r\n        }\r\n        if (this._useFresnel) {\r\n            defines.push(\"#define SSR_BLEND_WITH_FRESNEL\");\r\n        }\r\n        if (this._reflectivityThreshold === 0) {\r\n            defines.push(\"#define SSR_DISABLE_REFLECTIVITY_TEST\");\r\n        }\r\n\r\n        if (this._normalsAreInWorldSpace) {\r\n            defines.push(\"#define SSR_NORMAL_IS_IN_WORLDSPACE\");\r\n        }\r\n\r\n        if (this._normalsAreUnsigned) {\r\n            defines.push(\"#define SSR_DECODE_NORMAL\");\r\n        }\r\n\r\n        if (this.camera && this.camera.mode === Constants.ORTHOGRAPHIC_CAMERA) {\r\n            defines.push(\"#define ORTHOGRAPHIC_CAMERA\");\r\n        }\r\n\r\n        this.updateEffect(defines.join(\"\\n\"));\r\n    }\r\n}\r\n"]}