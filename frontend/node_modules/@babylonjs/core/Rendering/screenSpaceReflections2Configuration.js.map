{"version":3,"file":"screenSpaceReflections2Configuration.js","sourceRoot":"","sources":["../../../../dev/core/src/Rendering/screenSpaceReflections2Configuration.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD;;;GAGG;AACH,MAAM,OAAO,oCAAoC;IAgB7C;;OAEG;IACH,YAAY,sBAA+B,KAAK;QAlBhD;;WAEG;QACI,YAAO,GAAG,KAAK,CAAC;QAEvB;;WAEG;QACI,SAAI,GAAG,yBAAyB,CAAC;QAExC;;WAEG;QACa,qBAAgB,GAAa,CAAC,SAAS,CAAC,2BAA2B,EAAE,SAAS,CAAC,iCAAiC,CAAC,CAAC;QAM9H,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,SAAS,CAAC,sCAAsC,CAAC,CAAC,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC;IAC9I,CAAC;CACJ","sourcesContent":["import { Constants } from \"../Engines/constants\";\r\nimport type { PrePassEffectConfiguration } from \"./prePassEffectConfiguration\";\r\n\r\n/**\r\n * Contains all parameters needed for the prepass to perform\r\n * screen space reflections\r\n */\r\nexport class ScreenSpaceReflections2Configuration implements PrePassEffectConfiguration {\r\n    /**\r\n     * Is ssr enabled\r\n     */\r\n    public enabled = false;\r\n\r\n    /**\r\n     * Name of the configuration\r\n     */\r\n    public name = \"screenSpaceReflections2\";\r\n\r\n    /**\r\n     * Textures that should be present in the MRT for this effect to work\r\n     */\r\n    public readonly texturesRequired: number[] = [Constants.PREPASS_NORMAL_TEXTURE_TYPE, Constants.PREPASS_REFLECTIVITY_TEXTURE_TYPE];\r\n\r\n    /**\r\n     * @param useScreenspaceDepth If the effect should use the screenspace depth texture instead of a linear one\r\n     */\r\n    constructor(useScreenspaceDepth: boolean = false) {\r\n        this.texturesRequired.push(useScreenspaceDepth ? Constants.PREPASS_SCREENSPACE_DEPTH_TEXTURE_TYPE : Constants.PREPASS_DEPTH_TEXTURE_TYPE);\r\n    }\r\n}\r\n"]}