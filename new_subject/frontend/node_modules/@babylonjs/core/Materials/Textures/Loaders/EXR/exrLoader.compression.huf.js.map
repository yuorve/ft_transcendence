{"version":3,"file":"exrLoader.compression.huf.js","sourceRoot":"","sources":["../../../../../../../dev/core/src/Materials/Textures/Loaders/EXR/exrLoader.compression.huf.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\nimport type { Nullable } from \"core/types\";\r\nimport type { DataCursor } from \"./exrLoader.core\";\r\nimport { ParseUint32, ParseUint8Array } from \"./exrLoader.core\";\r\nimport { HUF_DECBITS, HUF_DECMASK, HUF_DECSIZE, HUF_ENCSIZE, LONG_ZEROCODE_RUN, SHORT_ZEROCODE_RUN, SHORTEST_LONG_RUN, USHORT_RANGE } from \"./exrLoader.interfaces\";\r\n\r\n/**\r\n * Inspired by https://github.com/sciecode/three.js/blob/dev/examples/jsm/loaders/EXRLoader.js\r\n * Referred to the original Industrial Light & Magic OpenEXR implementation and the TinyEXR / Syoyo Fujita\r\n * implementation.\r\n */\r\n\r\n// /*\r\n// Copyright (c) 2014 - 2017, Syoyo Fujita\r\n// All rights reserved.\r\n\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are met:\r\n//     * Redistributions of source code must retain the above copyright\r\n//       notice, this list of conditions and the following disclaimer.\r\n//     * Redistributions in binary form must reproduce the above copyright\r\n//       notice, this list of conditions and the following disclaimer in the\r\n//       documentation and/or other materials provided with the distribution.\r\n//     * Neither the name of the Syoyo Fujita nor the\r\n//       names of its contributors may be used to endorse or promote products\r\n//       derived from this software without specific prior written permission.\r\n\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n// DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\r\n// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n// */\r\n\r\n// // TinyEXR contains some OpenEXR code, which is licensed under ------------\r\n\r\n// ///////////////////////////////////////////////////////////////////////////\r\n// //\r\n// // Copyright (c) 2002, Industrial Light & Magic, a division of Lucas\r\n// // Digital Ltd. LLC\r\n// //\r\n// // All rights reserved.\r\n// //\r\n// // Redistribution and use in source and binary forms, with or without\r\n// // modification, are permitted provided that the following conditions are\r\n// // met:\r\n// // *       Redistributions of source code must retain the above copyright\r\n// // notice, this list of conditions and the following disclaimer.\r\n// // *       Redistributions in binary form must reproduce the above\r\n// // copyright notice, this list of conditions and the following disclaimer\r\n// // in the documentation and/or other materials provided with the\r\n// // distribution.\r\n// // *       Neither the name of Industrial Light & Magic nor the names of\r\n// // its contributors may be used to endorse or promote products derived\r\n// // from this software without specific prior written permission.\r\n// //\r\n// // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// // \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n// //\r\n// ///////////////////////////////////////////////////////////////////////////\r\n\r\n// // End of OpenEXR license -------------------------------------------------\r\n\r\nconst NBITS = 16;\r\nconst A_OFFSET = 1 << (NBITS - 1);\r\nconst MOD_MASK = (1 << NBITS) - 1;\r\n\r\ninterface IGetBits {\r\n    l: number;\r\n    c: number;\r\n    lc: number;\r\n}\r\n\r\ninterface IGetChar {\r\n    c: number;\r\n    lc: number;\r\n}\r\n\r\n/** @internal */\r\nexport function ReverseLutFromBitmap(bitmap: Uint8Array, lut: Uint16Array) {\r\n    let k = 0;\r\n\r\n    for (let i = 0; i < USHORT_RANGE; ++i) {\r\n        if (i == 0 || bitmap[i >> 3] & (1 << (i & 7))) {\r\n            lut[k++] = i;\r\n        }\r\n    }\r\n\r\n    const n = k - 1;\r\n\r\n    while (k < USHORT_RANGE) lut[k++] = 0;\r\n\r\n    return n;\r\n}\r\n\r\nfunction HufClearDecTable(hdec: Array<any>) {\r\n    for (let i = 0; i < HUF_DECSIZE; i++) {\r\n        hdec[i] = {};\r\n        hdec[i].len = 0;\r\n        hdec[i].lit = 0;\r\n        hdec[i].p = null;\r\n    }\r\n}\r\n\r\nfunction GetBits(nBits: number, c: number, lc: number, array: Uint8Array, offset: DataCursor): IGetBits {\r\n    while (lc < nBits) {\r\n        c = (c << 8) | ParseUint8Array(array, offset);\r\n        lc += 8;\r\n    }\r\n\r\n    lc -= nBits;\r\n\r\n    return {\r\n        l: (c >> lc) & ((1 << nBits) - 1),\r\n        c,\r\n        lc,\r\n    };\r\n}\r\n\r\nfunction GetChar(c: number, lc: number, array: Uint8Array, offset: DataCursor): IGetChar {\r\n    c = (c << 8) | ParseUint8Array(array, offset);\r\n    lc += 8;\r\n\r\n    return {\r\n        c,\r\n        lc,\r\n    };\r\n}\r\n\r\nfunction GetCode(\r\n    po: number,\r\n    rlc: number,\r\n    c: number,\r\n    lc: number,\r\n    array: Uint8Array,\r\n    offset: DataCursor,\r\n    outBuffer: Uint16Array,\r\n    outBufferOffset: DataCursor,\r\n    outBufferEndOffset: number\r\n): Nullable<IGetChar> {\r\n    if (po == rlc) {\r\n        if (lc < 8) {\r\n            const gc = GetChar(c, lc, array, offset);\r\n            c = gc.c;\r\n            lc = gc.lc;\r\n        }\r\n\r\n        lc -= 8;\r\n\r\n        let cs = c >> lc;\r\n        cs = new Uint8Array([cs])[0];\r\n\r\n        if (outBufferOffset.value + cs > outBufferEndOffset) {\r\n            return null;\r\n        }\r\n\r\n        const s = outBuffer[outBufferOffset.value - 1];\r\n\r\n        while (cs-- > 0) {\r\n            outBuffer[outBufferOffset.value++] = s;\r\n        }\r\n    } else if (outBufferOffset.value < outBufferEndOffset) {\r\n        outBuffer[outBufferOffset.value++] = po;\r\n    } else {\r\n        return null;\r\n    }\r\n\r\n    return { c, lc };\r\n}\r\n\r\nconst HufTableBuffer = new Array(59);\r\n\r\nfunction HufCanonicalCodeTable(hcode: Array<any>) {\r\n    for (let i = 0; i <= 58; ++i) HufTableBuffer[i] = 0;\r\n    for (let i = 0; i < HUF_ENCSIZE; ++i) HufTableBuffer[hcode[i]] += 1;\r\n\r\n    let c = 0;\r\n\r\n    for (let i = 58; i > 0; --i) {\r\n        const nc = (c + HufTableBuffer[i]) >> 1;\r\n        HufTableBuffer[i] = c;\r\n        c = nc;\r\n    }\r\n\r\n    for (let i = 0; i < HUF_ENCSIZE; ++i) {\r\n        const l = hcode[i];\r\n        if (l > 0) hcode[i] = l | (HufTableBuffer[l]++ << 6);\r\n    }\r\n}\r\n\r\nfunction HufUnpackEncTable(array: Uint8Array, offset: DataCursor, ni: number, im: number, iM: number, hcode: Array<any>) {\r\n    const p = offset;\r\n    let c = 0;\r\n    let lc = 0;\r\n\r\n    for (; im <= iM; im++) {\r\n        if (p.value - offset.value > ni) {\r\n            return;\r\n        }\r\n\r\n        let gb = GetBits(6, c, lc, array, p);\r\n\r\n        const l = gb.l;\r\n        c = gb.c;\r\n        lc = gb.lc;\r\n\r\n        hcode[im] = l;\r\n\r\n        if (l == LONG_ZEROCODE_RUN) {\r\n            if (p.value - offset.value > ni) {\r\n                throw new Error(\"Error in HufUnpackEncTable\");\r\n            }\r\n\r\n            gb = GetBits(8, c, lc, array, p);\r\n\r\n            let zerun = gb.l + SHORTEST_LONG_RUN;\r\n            c = gb.c;\r\n            lc = gb.lc;\r\n\r\n            if (im + zerun > iM + 1) {\r\n                throw new Error(\"Error in HufUnpackEncTable\");\r\n            }\r\n\r\n            while (zerun--) hcode[im++] = 0;\r\n\r\n            im--;\r\n        } else if (l >= SHORT_ZEROCODE_RUN) {\r\n            let zerun = l - SHORT_ZEROCODE_RUN + 2;\r\n\r\n            if (im + zerun > iM + 1) {\r\n                throw new Error(\"Error in HufUnpackEncTable\");\r\n            }\r\n\r\n            while (zerun--) hcode[im++] = 0;\r\n\r\n            im--;\r\n        }\r\n    }\r\n\r\n    HufCanonicalCodeTable(hcode);\r\n}\r\n\r\nfunction HufLength(code: number) {\r\n    return code & 63;\r\n}\r\n\r\nfunction HufCode(code: number) {\r\n    return code >> 6;\r\n}\r\n\r\nfunction HufBuildDecTable(hcode: Array<any>, im: number, iM: number, hdecod: Array<any>) {\r\n    for (; im <= iM; im++) {\r\n        const c = HufCode(hcode[im]);\r\n        const l = HufLength(hcode[im]);\r\n\r\n        if (c >> l) {\r\n            throw new Error(\"Invalid table entry\");\r\n        }\r\n\r\n        if (l > HUF_DECBITS) {\r\n            const pl = hdecod[c >> (l - HUF_DECBITS)];\r\n\r\n            if (pl.len) {\r\n                throw new Error(\"Invalid table entry\");\r\n            }\r\n\r\n            pl.lit++;\r\n\r\n            if (pl.p) {\r\n                const p = pl.p;\r\n                pl.p = new Array(pl.lit);\r\n\r\n                for (let i = 0; i < pl.lit - 1; ++i) {\r\n                    pl.p[i] = p[i];\r\n                }\r\n            } else {\r\n                pl.p = new Array(1);\r\n            }\r\n\r\n            pl.p[pl.lit - 1] = im;\r\n        } else if (l) {\r\n            let plOffset = 0;\r\n\r\n            for (let i = 1 << (HUF_DECBITS - l); i > 0; i--) {\r\n                const pl = hdecod[(c << (HUF_DECBITS - l)) + plOffset];\r\n\r\n                if (pl.len || pl.p) {\r\n                    throw new Error(\"Invalid table entry\");\r\n                }\r\n\r\n                pl.len = l;\r\n                pl.lit = im;\r\n\r\n                plOffset++;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction HufDecode(\r\n    encodingTable: Array<any>,\r\n    decodingTable: Array<any>,\r\n    array: Uint8Array,\r\n    offset: DataCursor,\r\n    ni: number,\r\n    rlc: number,\r\n    no: number,\r\n    outBuffer: Uint16Array,\r\n    outOffset: DataCursor\r\n) {\r\n    let c = 0;\r\n    let lc = 0;\r\n    const outBufferEndOffset = no;\r\n    const inOffsetEnd = Math.trunc(offset.value + (ni + 7) / 8);\r\n\r\n    while (offset.value < inOffsetEnd) {\r\n        let gc = GetChar(c, lc, array, offset);\r\n\r\n        c = gc.c;\r\n        lc = gc.lc;\r\n\r\n        while (lc >= HUF_DECBITS) {\r\n            const index = (c >> (lc - HUF_DECBITS)) & HUF_DECMASK;\r\n            const pl = decodingTable[index];\r\n\r\n            if (pl.len) {\r\n                lc -= pl.len;\r\n\r\n                const gCode = GetCode(pl.lit, rlc, c, lc, array, offset, outBuffer, outOffset, outBufferEndOffset);\r\n                if (gCode) {\r\n                    c = gCode.c;\r\n                    lc = gCode.lc;\r\n                }\r\n            } else {\r\n                if (!pl.p) {\r\n                    throw new Error(\"hufDecode issues\");\r\n                }\r\n\r\n                let j;\r\n\r\n                for (j = 0; j < pl.lit; j++) {\r\n                    const l = HufLength(encodingTable[pl.p[j]]);\r\n\r\n                    while (lc < l && offset.value < inOffsetEnd) {\r\n                        gc = GetChar(c, lc, array, offset);\r\n\r\n                        c = gc.c;\r\n                        lc = gc.lc;\r\n                    }\r\n\r\n                    if (lc >= l) {\r\n                        if (HufCode(encodingTable[pl.p[j]]) == ((c >> (lc - l)) & ((1 << l) - 1))) {\r\n                            lc -= l;\r\n\r\n                            const gCode = GetCode(pl.p[j], rlc, c, lc, array, offset, outBuffer, outOffset, outBufferEndOffset);\r\n\r\n                            if (gCode) {\r\n                                c = gCode.c;\r\n                                lc = gCode.lc;\r\n                            }\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (j == pl.lit) {\r\n                    throw new Error(\"HufDecode issues\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const i = (8 - ni) & 7;\r\n\r\n    c >>= i;\r\n    lc -= i;\r\n\r\n    while (lc > 0) {\r\n        const pl = decodingTable[(c << (HUF_DECBITS - lc)) & HUF_DECMASK];\r\n\r\n        if (pl.len) {\r\n            lc -= pl.len;\r\n\r\n            const gCode = GetCode(pl.lit, rlc, c, lc, array, offset, outBuffer, outOffset, outBufferEndOffset);\r\n            if (gCode) {\r\n                c = gCode.c;\r\n                lc = gCode.lc;\r\n            }\r\n        } else {\r\n            throw new Error(\"HufDecode issues\");\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/** @internal */\r\nexport function HufUncompress(array: Uint8Array, dataView: DataView, offset: DataCursor, nCompressed: number, outBuffer: Uint16Array, nRaw: number) {\r\n    const outOffset: DataCursor = { value: 0 };\r\n    const initialInOffset = offset.value;\r\n\r\n    const im = ParseUint32(dataView, offset);\r\n    const iM = ParseUint32(dataView, offset);\r\n\r\n    offset.value += 4;\r\n\r\n    const nBits = ParseUint32(dataView, offset);\r\n\r\n    offset.value += 4;\r\n\r\n    if (im < 0 || im >= HUF_ENCSIZE || iM < 0 || iM >= HUF_ENCSIZE) {\r\n        throw new Error(\"Wrong HUF_ENCSIZE\");\r\n    }\r\n\r\n    const freq = new Array(HUF_ENCSIZE);\r\n    const hdec = new Array(HUF_DECSIZE);\r\n\r\n    HufClearDecTable(hdec);\r\n\r\n    const ni = nCompressed - (offset.value - initialInOffset);\r\n\r\n    HufUnpackEncTable(array, offset, ni, im, iM, freq);\r\n\r\n    if (nBits > 8 * (nCompressed - (offset.value - initialInOffset))) {\r\n        throw new Error(\"Wrong hufUncompress\");\r\n    }\r\n\r\n    HufBuildDecTable(freq, im, iM, hdec);\r\n\r\n    HufDecode(freq, hdec, array, offset, nBits, iM, nRaw, outBuffer, outOffset);\r\n}\r\n\r\nfunction UInt16(value: number) {\r\n    return value & 0xffff;\r\n}\r\n\r\nfunction Int16(value: number) {\r\n    const ref = UInt16(value);\r\n    return ref > 0x7fff ? ref - 0x10000 : ref;\r\n}\r\n\r\nfunction Wdec14(l: number, h: number) {\r\n    const ls = Int16(l);\r\n    const hs = Int16(h);\r\n\r\n    const hi = hs;\r\n    const ai = ls + (hi & 1) + (hi >> 1);\r\n\r\n    const as = ai;\r\n    const bs = ai - hi;\r\n\r\n    return { a: as, b: bs };\r\n}\r\n\r\nfunction Wdec16(l: number, h: number) {\r\n    const m = UInt16(l);\r\n    const d = UInt16(h);\r\n\r\n    const bb = (m - (d >> 1)) & MOD_MASK;\r\n    const aa = (d + bb - A_OFFSET) & MOD_MASK;\r\n\r\n    return { a: aa, b: bb };\r\n}\r\n\r\n/** @internal */\r\nexport function Wav2Decode(buffer: Uint16Array, j: number, nx: number, ox: number, ny: number, oy: number, mx: number) {\r\n    const w14 = mx < 1 << 14;\r\n    const n = nx > ny ? ny : nx;\r\n    let p = 1;\r\n    let p2;\r\n    let py;\r\n\r\n    while (p <= n) p <<= 1;\r\n\r\n    p >>= 1;\r\n    p2 = p;\r\n    p >>= 1;\r\n\r\n    while (p >= 1) {\r\n        py = 0;\r\n        const ey = py + oy * (ny - p2);\r\n        const oy1 = oy * p;\r\n        const oy2 = oy * p2;\r\n        const ox1 = ox * p;\r\n        const ox2 = ox * p2;\r\n        let i00, i01, i10, i11;\r\n\r\n        for (; py <= ey; py += oy2) {\r\n            let px = py;\r\n            const ex = py + ox * (nx - p2);\r\n\r\n            for (; px <= ex; px += ox2) {\r\n                const p01 = px + ox1;\r\n                const p10 = px + oy1;\r\n                const p11 = p10 + ox1;\r\n\r\n                if (w14) {\r\n                    let result = Wdec14(buffer[px + j], buffer[p10 + j]);\r\n\r\n                    i00 = result.a;\r\n                    i10 = result.b;\r\n\r\n                    result = Wdec14(buffer[p01 + j], buffer[p11 + j]);\r\n\r\n                    i01 = result.a;\r\n                    i11 = result.b;\r\n\r\n                    result = Wdec14(i00, i01);\r\n\r\n                    buffer[px + j] = result.a;\r\n                    buffer[p01 + j] = result.b;\r\n\r\n                    result = Wdec14(i10, i11);\r\n\r\n                    buffer[p10 + j] = result.a;\r\n                    buffer[p11 + j] = result.b;\r\n                } else {\r\n                    let result = Wdec16(buffer[px + j], buffer[p10 + j]);\r\n\r\n                    i00 = result.a;\r\n                    i10 = result.b;\r\n\r\n                    result = Wdec16(buffer[p01 + j], buffer[p11 + j]);\r\n\r\n                    i01 = result.a;\r\n                    i11 = result.b;\r\n\r\n                    result = Wdec16(i00, i01);\r\n\r\n                    buffer[px + j] = result.a;\r\n                    buffer[p01 + j] = result.b;\r\n\r\n                    result = Wdec16(i10, i11);\r\n\r\n                    buffer[p10 + j] = result.a;\r\n                    buffer[p11 + j] = result.b;\r\n                }\r\n            }\r\n\r\n            if (nx & p) {\r\n                const p10 = px + oy1;\r\n                let result;\r\n                if (w14) {\r\n                    result = Wdec14(buffer[px + j], buffer[p10 + j]);\r\n                } else {\r\n                    result = Wdec16(buffer[px + j], buffer[p10 + j]);\r\n                }\r\n\r\n                i00 = result.a;\r\n                buffer[p10 + j] = result.b;\r\n\r\n                buffer[px + j] = i00;\r\n            }\r\n        }\r\n\r\n        if (ny & p) {\r\n            let px = py;\r\n            const ex = py + ox * (nx - p2);\r\n\r\n            for (; px <= ex; px += ox2) {\r\n                const p01 = px + ox1;\r\n                let result;\r\n\r\n                if (w14) {\r\n                    result = Wdec14(buffer[px + j], buffer[p01 + j]);\r\n                } else {\r\n                    result = Wdec16(buffer[px + j], buffer[p01 + j]);\r\n                }\r\n\r\n                i00 = result.a;\r\n                buffer[p01 + j] = result.b;\r\n\r\n                buffer[px + j] = i00;\r\n            }\r\n        }\r\n\r\n        p2 = p;\r\n        p >>= 1;\r\n    }\r\n\r\n    return py;\r\n}\r\n\r\n/** @internal */\r\nexport function ApplyLut(lut: Uint16Array, data: Uint16Array, nData: number) {\r\n    for (let i = 0; i < nData; ++i) {\r\n        data[i] = lut[data[i]];\r\n    }\r\n}\r\n"]}