{"version":3,"file":"iblCdfGeneratorSceneComponent.js","sourceRoot":"","sources":["../../../../dev/core/src/Rendering/iblCdfGeneratorSceneComponent.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AAEjC,OAAO,EAAE,uBAAuB,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AA8BpD,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,iBAAiB,EAAE;IACtD,GAAG,EAAE;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC;IACjC,CAAC;IACD,GAAG,EAAE,UAAuB,KAAgC;QACxD,IAAI,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAClC,CAAC;IACL,CAAC;IACD,UAAU,EAAE,IAAI;IAChB,YAAY,EAAE,IAAI;CACrB,CAAC,CAAC;AAEH,KAAK,CAAC,SAAS,CAAC,qBAAqB,GAAG;IACpC,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;IACjC,CAAC;IAED,IAAI,CAAC,gBAAgB,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;IAClD,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC;IAC9D,CAAC;IACD,OAAO,IAAI,CAAC,gBAAgB,CAAC;AACjC,CAAC,CAAC;AAEF,KAAK,CAAC,SAAS,CAAC,sBAAsB,GAAG;IACrC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACzB,OAAO;IACX,CAAC;IAED,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;IAChC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACjC,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,OAAO,6BAA6B;IAWtC;;;OAGG;IACH,YAAY,KAAY;QAdxB;;WAEG;QACa,SAAI,GAAG,uBAAuB,CAAC,oBAAoB,CAAC;QA4C5D,oBAAe,GAA8C,IAAI,CAAC;QAhCtE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAED;;OAEG;IACI,QAAQ;QACX,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,qCAAqC,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAClH,CAAC;IAED;;;OAGG;IACI,OAAO;QACV,mCAAmC;IACvC,CAAC;IAED;;OAEG;IACI,OAAO;QACV,IAAI,CAAC,KAAK,CAAC,qCAAqC,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAClF,CAAC;IAEO,gBAAgB;QACpB,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,IAAI,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;YAC9D,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;QACzE,CAAC;IACL,CAAC;CAGJ;AAED,eAAe,CAAC,6BAA6B,GAAG,CAAC,KAAY,EAAE,EAAE;IAC7D,qDAAqD;IACrD,IAAI,SAAS,GAAG,KAAK,CAAC,aAAa,CAAC,uBAAuB,CAAC,oBAAoB,CAAkC,CAAC;IACnH,IAAI,CAAC,SAAS,EAAE,CAAC;QACb,SAAS,GAAG,IAAI,6BAA6B,CAAC,KAAK,CAAC,CAAC;QACrD,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import type { Nullable } from \"../types\";\r\nimport { Scene } from \"../scene\";\r\nimport type { ISceneComponent } from \"../sceneComponent\";\r\nimport { SceneComponentConstants } from \"../sceneComponent\";\r\nimport { IblCdfGenerator } from \"./iblCdfGenerator\";\r\nimport type { BaseTexture } from \"../Materials/Textures/baseTexture\";\r\nimport type { Observer } from \"../Misc/observable\";\r\n\r\ndeclare module \"../scene\" {\r\n    export interface Scene {\r\n        /** @internal (Backing field) */\r\n        _iblCdfGenerator: Nullable<IblCdfGenerator>;\r\n\r\n        /**\r\n         * Gets or Sets the current CDF generator associated to the scene.\r\n         * The CDF (cumulative distribution function) generator creates CDF maps\r\n         * for a given IBL texture that can then be used for more efficient\r\n         * importance sampling.\r\n         */\r\n        iblCdfGenerator: Nullable<IblCdfGenerator>;\r\n\r\n        /**\r\n         * Enables a IblCdfGenerator and associates it with the scene.\r\n         * @returns the IblCdfGenerator\r\n         */\r\n        enableIblCdfGenerator(): Nullable<IblCdfGenerator>;\r\n\r\n        /**\r\n         * Disables the GeometryBufferRender associated with the scene\r\n         */\r\n        disableIblCdfGenerator(): void;\r\n    }\r\n}\r\n\r\nObject.defineProperty(Scene.prototype, \"iblCdfGenerator\", {\r\n    get: function (this: Scene) {\r\n        return this._iblCdfGenerator;\r\n    },\r\n    set: function (this: Scene, value: Nullable<IblCdfGenerator>) {\r\n        if (value) {\r\n            this._iblCdfGenerator = value;\r\n        }\r\n    },\r\n    enumerable: true,\r\n    configurable: true,\r\n});\r\n\r\nScene.prototype.enableIblCdfGenerator = function (): Nullable<IblCdfGenerator> {\r\n    if (this._iblCdfGenerator) {\r\n        return this._iblCdfGenerator;\r\n    }\r\n\r\n    this._iblCdfGenerator = new IblCdfGenerator(this);\r\n    if (this.environmentTexture) {\r\n        this._iblCdfGenerator.iblSource = this.environmentTexture;\r\n    }\r\n    return this._iblCdfGenerator;\r\n};\r\n\r\nScene.prototype.disableIblCdfGenerator = function (): void {\r\n    if (!this._iblCdfGenerator) {\r\n        return;\r\n    }\r\n\r\n    this._iblCdfGenerator.dispose();\r\n    this._iblCdfGenerator = null;\r\n};\r\n\r\n/**\r\n * Defines the IBL CDF Generator scene component responsible for generating CDF maps for a given IBL.\r\n */\r\nexport class IblCdfGeneratorSceneComponent implements ISceneComponent {\r\n    /**\r\n     * The component name helpful to identify the component in the list of scene components.\r\n     */\r\n    public readonly name = SceneComponentConstants.NAME_IBLCDFGENERATOR;\r\n\r\n    /**\r\n     * The scene the component belongs to.\r\n     */\r\n    public scene: Scene;\r\n\r\n    /**\r\n     * Creates a new instance of the component for the given scene\r\n     * @param scene Defines the scene to register the component in\r\n     */\r\n    constructor(scene: Scene) {\r\n        this.scene = scene;\r\n    }\r\n\r\n    /**\r\n     * Registers the component in a given scene\r\n     */\r\n    public register(): void {\r\n        this._updateIblSource();\r\n        this._newIblObserver = this.scene.onEnvironmentTextureChangedObservable.add(this._updateIblSource.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Rebuilds the elements related to this component in case of\r\n     * context lost for instance.\r\n     */\r\n    public rebuild(): void {\r\n        // Nothing to do for this component\r\n    }\r\n\r\n    /**\r\n     * Disposes the component and the associated resources\r\n     */\r\n    public dispose(): void {\r\n        this.scene.onEnvironmentTextureChangedObservable.remove(this._newIblObserver);\r\n    }\r\n\r\n    private _updateIblSource(): void {\r\n        if (this.scene.iblCdfGenerator && this.scene.environmentTexture) {\r\n            this.scene.iblCdfGenerator.iblSource = this.scene.environmentTexture;\r\n        }\r\n    }\r\n\r\n    private _newIblObserver: Nullable<Observer<Nullable<BaseTexture>>> = null;\r\n}\r\n\r\nIblCdfGenerator._SceneComponentInitialization = (scene: Scene) => {\r\n    // Register the CDF generator component to the scene.\r\n    let component = scene._getComponent(SceneComponentConstants.NAME_IBLCDFGENERATOR) as IblCdfGeneratorSceneComponent;\r\n    if (!component) {\r\n        component = new IblCdfGeneratorSceneComponent(scene);\r\n        scene._addComponent(component);\r\n    }\r\n};\r\n"]}