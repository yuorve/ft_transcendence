{"version":3,"file":"baseShadowGeneratorBlock.js","sourceRoot":"","sources":["../../../../../../../dev/core/src/FrameGraph/Node/Blocks/Rendering/baseShadowGeneratorBlock.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\r\n    NodeRenderGraphConnectionPoint,\r\n    Scene,\r\n    NodeRenderGraphBuildState,\r\n    FrameGraph,\r\n    IShadowLight,\r\n    FrameGraphObjectList,\r\n    FrameGraphShadowGeneratorTask,\r\n    Camera,\r\n    // eslint-disable-next-line import/no-internal-modules\r\n} from \"core/index\";\r\nimport { NodeRenderGraphBlock } from \"../../nodeRenderGraphBlock\";\r\nimport { NodeRenderGraphBlockConnectionPointTypes } from \"../../Types/nodeRenderGraphTypes\";\r\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../../../../Decorators/nodeDecorator\";\r\nimport { ShadowGenerator } from \"../../../../Lights/Shadows/shadowGenerator\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class NodeRenderGraphBaseShadowGeneratorBlock extends NodeRenderGraphBlock {\r\n    protected override _frameGraphTask: FrameGraphShadowGeneratorTask;\r\n\r\n    /**\r\n     * Gets the frame graph task associated with this block\r\n     */\r\n    public override get task() {\r\n        return this._frameGraphTask;\r\n    }\r\n\r\n    /**\r\n     * Create a new NodeRenderGraphBaseShadowGeneratorBlock\r\n     * @param name defines the block name\r\n     * @param frameGraph defines the hosting frame graph\r\n     * @param scene defines the hosting scene\r\n     */\r\n    public constructor(name: string, frameGraph: FrameGraph, scene: Scene) {\r\n        super(name, frameGraph, scene);\r\n\r\n        this.registerInput(\"light\", NodeRenderGraphBlockConnectionPointTypes.ShadowLight);\r\n        this.registerInput(\"objects\", NodeRenderGraphBlockConnectionPointTypes.ObjectList);\r\n        this.registerInput(\"camera\", NodeRenderGraphBlockConnectionPointTypes.Camera);\r\n        this._addDependenciesInput();\r\n\r\n        this.registerOutput(\"generator\", NodeRenderGraphBlockConnectionPointTypes.ShadowGenerator);\r\n        this.registerOutput(\"output\", NodeRenderGraphBlockConnectionPointTypes.Texture);\r\n    }\r\n\r\n    /** Sets the size of the shadow texture */\r\n    @editableInPropertyPage(\"Map size\", PropertyTypeForEdition.List, \"PROPERTIES\", {\r\n        options: [\r\n            { label: \"128\", value: 128 },\r\n            { label: \"256\", value: 256 },\r\n            { label: \"512\", value: 512 },\r\n            { label: \"1024\", value: 1024 },\r\n            { label: \"2048\", value: 2048 },\r\n            { label: \"4096\", value: 4096 },\r\n            { label: \"8192\", value: 8192 },\r\n        ],\r\n    })\r\n    public get mapSize() {\r\n        return this._frameGraphTask.mapSize;\r\n    }\r\n\r\n    public set mapSize(value: number) {\r\n        this._frameGraphTask.mapSize = value;\r\n    }\r\n\r\n    /** Sets the texture type to float (by default, half float is used if supported) */\r\n    @editableInPropertyPage(\"Use 32 bits float texture type\", PropertyTypeForEdition.Boolean, \"PROPERTIES\")\r\n    public get useFloat32TextureType() {\r\n        return this._frameGraphTask.useFloat32TextureType;\r\n    }\r\n\r\n    public set useFloat32TextureType(value: boolean) {\r\n        this._frameGraphTask.useFloat32TextureType = value;\r\n    }\r\n\r\n    /** Sets the texture type to Red */\r\n    @editableInPropertyPage(\"Use red texture format\", PropertyTypeForEdition.Boolean, \"PROPERTIES\")\r\n    public get useRedTextureFormat() {\r\n        return this._frameGraphTask.useRedTextureFormat;\r\n    }\r\n\r\n    public set useRedTextureFormat(value: boolean) {\r\n        this._frameGraphTask.useRedTextureFormat = value;\r\n    }\r\n\r\n    /** Sets the bias */\r\n    @editableInPropertyPage(\"Bias\", PropertyTypeForEdition.Float, \"PROPERTIES\", { min: 0, max: 1 })\r\n    public get bias() {\r\n        return this._frameGraphTask.bias;\r\n    }\r\n\r\n    public set bias(value: number) {\r\n        this._frameGraphTask.bias = value;\r\n    }\r\n\r\n    /** Sets the normal bias */\r\n    @editableInPropertyPage(\"Normal bias\", PropertyTypeForEdition.Float, \"PROPERTIES\", { min: 0, max: 1 })\r\n    public get normalBias() {\r\n        return this._frameGraphTask.normalBias;\r\n    }\r\n\r\n    public set normalBias(value: number) {\r\n        this._frameGraphTask.normalBias = value;\r\n    }\r\n\r\n    /** Sets the darkness of the shadows */\r\n    @editableInPropertyPage(\"Darkness\", PropertyTypeForEdition.Float, \"PROPERTIES\", { min: 0, max: 1 })\r\n    public get darkness() {\r\n        return this._frameGraphTask.darkness;\r\n    }\r\n\r\n    public set darkness(value: number) {\r\n        this._frameGraphTask.darkness = value;\r\n    }\r\n\r\n    /** Sets the filter method */\r\n    @editableInPropertyPage(\"Filter\", PropertyTypeForEdition.List, \"PROPERTIES\", {\r\n        options: [\r\n            { label: \"None\", value: ShadowGenerator.FILTER_NONE },\r\n            { label: \"Exponential\", value: ShadowGenerator.FILTER_EXPONENTIALSHADOWMAP },\r\n            { label: \"Poisson Sampling\", value: ShadowGenerator.FILTER_POISSONSAMPLING },\r\n            { label: \"Blur exponential\", value: ShadowGenerator.FILTER_BLUREXPONENTIALSHADOWMAP },\r\n            { label: \"Close exponential\", value: ShadowGenerator.FILTER_CLOSEEXPONENTIALSHADOWMAP },\r\n            { label: \"Blur close exponential\", value: ShadowGenerator.FILTER_BLURCLOSEEXPONENTIALSHADOWMAP },\r\n            { label: \"PCF\", value: ShadowGenerator.FILTER_PCF },\r\n            { label: \"PCSS\", value: ShadowGenerator.FILTER_PCSS },\r\n        ],\r\n    })\r\n    public get filter() {\r\n        return this._frameGraphTask.filter;\r\n    }\r\n\r\n    public set filter(value: number) {\r\n        this._frameGraphTask.filter = value;\r\n    }\r\n\r\n    /** Sets the filter quality (for PCF and PCSS) */\r\n    @editableInPropertyPage(\"Filter quality\", PropertyTypeForEdition.List, \"PROPERTIES\", {\r\n        options: [\r\n            { label: \"Low\", value: ShadowGenerator.QUALITY_LOW },\r\n            { label: \"Medium\", value: ShadowGenerator.QUALITY_MEDIUM },\r\n            { label: \"High\", value: ShadowGenerator.QUALITY_HIGH },\r\n        ],\r\n    })\r\n    public get filteringQuality() {\r\n        return this._frameGraphTask.filteringQuality;\r\n    }\r\n\r\n    public set filteringQuality(value: number) {\r\n        this._frameGraphTask.filteringQuality = value;\r\n    }\r\n\r\n    /** Gets or sets the ability to have transparent shadow */\r\n    @editableInPropertyPage(\"Transparency shadow\", PropertyTypeForEdition.Boolean, \"PROPERTIES\")\r\n    public get transparencyShadow() {\r\n        return this._frameGraphTask.transparencyShadow;\r\n    }\r\n\r\n    public set transparencyShadow(value: boolean) {\r\n        this._frameGraphTask.transparencyShadow = value;\r\n    }\r\n\r\n    /** Enables or disables shadows with varying strength based on the transparency */\r\n    @editableInPropertyPage(\"Enable soft transparent shadows\", PropertyTypeForEdition.Boolean, \"PROPERTIES\")\r\n    public get enableSoftTransparentShadow() {\r\n        return this._frameGraphTask.enableSoftTransparentShadow;\r\n    }\r\n\r\n    public set enableSoftTransparentShadow(value: boolean) {\r\n        this._frameGraphTask.enableSoftTransparentShadow = value;\r\n    }\r\n\r\n    /** If this is true, use the opacity texture's alpha channel for transparent shadows instead of the diffuse one */\r\n    @editableInPropertyPage(\"Use opacity texture for transparent shadows\", PropertyTypeForEdition.Boolean, \"PROPERTIES\")\r\n    public get useOpacityTextureForTransparentShadow() {\r\n        return this._frameGraphTask.useOpacityTextureForTransparentShadow;\r\n    }\r\n\r\n    public set useOpacityTextureForTransparentShadow(value: boolean) {\r\n        this._frameGraphTask.useOpacityTextureForTransparentShadow = value;\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public override getClassName() {\r\n        return \"NodeRenderGraphBaseShadowGeneratorBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the light input component\r\n     */\r\n    public get light(): NodeRenderGraphConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the objects input component\r\n     */\r\n    public get objects(): NodeRenderGraphConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the camera input component\r\n     */\r\n    public get camera(): NodeRenderGraphConnectionPoint {\r\n        return this._inputs[2];\r\n    }\r\n\r\n    /**\r\n     * Gets the shadow generator component\r\n     */\r\n    public get generator(): NodeRenderGraphConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the output texture component\r\n     */\r\n    public get output(): NodeRenderGraphConnectionPoint {\r\n        return this._outputs[1];\r\n    }\r\n\r\n    protected override _buildBlock(state: NodeRenderGraphBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        this._frameGraphTask.light = this.light.connectedPoint?.value as IShadowLight;\r\n        this._frameGraphTask.objectList = this.objects.connectedPoint?.value as FrameGraphObjectList;\r\n        this._frameGraphTask.camera = this.camera.connectedPoint?.value as Camera;\r\n\r\n        // Important: the shadow generator object is created by the task when we set the light, that's why we must set generator.value after setting the light!\r\n        this.generator.value = this._frameGraphTask;\r\n        this.output.value = this._frameGraphTask.outputTexture;\r\n    }\r\n\r\n    protected override _dumpPropertiesCode() {\r\n        const codes: string[] = [];\r\n        codes.push(`${this._codeVariableName}.mapSize = ${this.mapSize};`);\r\n        codes.push(`${this._codeVariableName}.useFloat32TextureType = ${this.useFloat32TextureType};`);\r\n        codes.push(`${this._codeVariableName}.useRedTextureFormat = ${this.useRedTextureFormat};`);\r\n        codes.push(`${this._codeVariableName}.bias = ${this.bias};`);\r\n        codes.push(`${this._codeVariableName}.normalBias = ${this.normalBias};`);\r\n        codes.push(`${this._codeVariableName}.darkness = ${this.darkness};`);\r\n        codes.push(`${this._codeVariableName}.filter = ${this.filter};`);\r\n        codes.push(`${this._codeVariableName}.filteringQuality = ${this.filteringQuality};`);\r\n        codes.push(`${this._codeVariableName}.transparencyShadow = ${this.transparencyShadow};`);\r\n        codes.push(`${this._codeVariableName}.enableSoftTransparentShadow = ${this.enableSoftTransparentShadow};`);\r\n        codes.push(`${this._codeVariableName}.useOpacityTextureForTransparentShadow = ${this.useOpacityTextureForTransparentShadow};`);\r\n        return super._dumpPropertiesCode() + codes.join(\"\\n\");\r\n    }\r\n\r\n    public override serialize(): any {\r\n        const serializationObject = super.serialize();\r\n        serializationObject.mapSize = this.mapSize;\r\n        serializationObject.useFloat32TextureType = this.useFloat32TextureType;\r\n        serializationObject.useRedTextureFormat = this.useRedTextureFormat;\r\n        serializationObject.bias = this.bias;\r\n        serializationObject.normalBias = this.normalBias;\r\n        serializationObject.darkness = this.darkness;\r\n        serializationObject.filter = this.filter;\r\n        serializationObject.filteringQuality = this.filteringQuality;\r\n        serializationObject.transparencyShadow = this.transparencyShadow;\r\n        serializationObject.enableSoftTransparentShadow = this.enableSoftTransparentShadow;\r\n        serializationObject.useOpacityTextureForTransparentShadow = this.useOpacityTextureForTransparentShadow;\r\n        return serializationObject;\r\n    }\r\n\r\n    public override _deserialize(serializationObject: any) {\r\n        super._deserialize(serializationObject);\r\n        this.mapSize = serializationObject.mapSize;\r\n        this.useFloat32TextureType = serializationObject.useFloat32TextureType;\r\n        this.useRedTextureFormat = serializationObject.useRedTextureFormat;\r\n        this.bias = serializationObject.bias;\r\n        this.normalBias = serializationObject.normalBias;\r\n        this.darkness = serializationObject.darkness;\r\n        this.filter = serializationObject.filter;\r\n        this.filteringQuality = serializationObject.filteringQuality;\r\n        this.transparencyShadow = serializationObject.transparencyShadow;\r\n        this.enableSoftTransparentShadow = serializationObject.enableSoftTransparentShadow;\r\n        this.useOpacityTextureForTransparentShadow = serializationObject.useOpacityTextureForTransparentShadow;\r\n    }\r\n}\r\n"]}