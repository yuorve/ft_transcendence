{"version":3,"file":"nodeRenderGraphConnectionPointCustomObject.js","sourceRoot":"","sources":["../../../../../dev/core/src/FrameGraph/Node/nodeRenderGraphConnectionPointCustomObject.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,8BAA8B,EAAE,MAAM,uCAAuC,CAAC;AAGvF;;GAEG;AACH,MAAM,OAAO,0CAA2E,SAAQ,8BAA8B;IAC1H;;;;;;;OAOG;IACH,YACI,IAAY,EACZ,UAAgC,EAChC,SAAkD;IAClD,YAAY;IACL,UAAqC,EACpC,UAAkB;QAE1B,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;QAH5B,eAAU,GAAV,UAAU,CAA2B;QACpC,eAAU,GAAV,UAAU,CAAQ;QAI1B,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;IAC5C,CAAC;IAEe,uBAAuB,CAAC,eAA+C;QACnF,OAAO,eAAe,YAAY,0CAA0C,IAAI,eAAe,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU;YAC1H,CAAC;YACD,CAAC,2EAAmE,CAAC;IAC7E,CAAC;IAEe,sBAAsB;QAClC,OAAO,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;CACJ","sourcesContent":["// eslint-disable-next-line import/no-internal-modules\r\nimport type { NodeRenderGraphConnectionPointDirection, NodeRenderGraphBlock, Nullable } from \"core/index\";\r\nimport { NodeRenderGraphConnectionPoint } from \"./nodeRenderGraphBlockConnectionPoint\";\r\nimport { NodeRenderGraphConnectionPointCompatibilityStates } from \"./Types/nodeRenderGraphTypes\";\r\n\r\n/**\r\n * Defines a connection point to be used for points with a custom object type\r\n */\r\nexport class NodeRenderGraphConnectionPointCustomObject<T extends NodeRenderGraphBlock> extends NodeRenderGraphConnectionPoint {\r\n    /**\r\n     * Creates a new connection point\r\n     * @param name defines the connection point name\r\n     * @param ownerBlock defines the block hosting this connection point\r\n     * @param direction defines the direction of the connection point\r\n     * @param _blockType\r\n     * @param _blockName\r\n     */\r\n    public constructor(\r\n        name: string,\r\n        ownerBlock: NodeRenderGraphBlock,\r\n        direction: NodeRenderGraphConnectionPointDirection,\r\n        // @internal\r\n        public _blockType: new (...args: any[]) => T,\r\n        private _blockName: string\r\n    ) {\r\n        super(name, ownerBlock, direction);\r\n\r\n        this.needDualDirectionValidation = true;\r\n    }\r\n\r\n    public override checkCompatibilityState(connectionPoint: NodeRenderGraphConnectionPoint): NodeRenderGraphConnectionPointCompatibilityStates {\r\n        return connectionPoint instanceof NodeRenderGraphConnectionPointCustomObject && connectionPoint._blockName === this._blockName\r\n            ? NodeRenderGraphConnectionPointCompatibilityStates.Compatible\r\n            : NodeRenderGraphConnectionPointCompatibilityStates.TypeIncompatible;\r\n    }\r\n\r\n    public override createCustomInputBlock(): Nullable<[NodeRenderGraphBlock, string]> {\r\n        return [new this._blockType(this._blockName), this.name];\r\n    }\r\n}\r\n"]}