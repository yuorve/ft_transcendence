{"version":3,"file":"frameGraphRenderTarget.js","sourceRoot":"","sources":["../../../../dev/core/src/FrameGraph/frameGraphRenderTarget.ts"],"names":[],"mappings":"AAGA;;;GAGG;AACH,MAAM,OAAO,sBAAsB;IAS/B,YACI,IAAY,EACZ,cAAwC,EACxC,aAAmE,EACnE,iBAA2C;QARrC,kBAAa,GAAG,KAAK,CAAC;QAU5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,cAAc,GAAG,aAAa,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;QAC/H,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;IAChD,CAAC;IAED,IAAW,mBAAmB;QAC1B,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,OAAO,SAAS,CAAC;QACrB,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YAE3C,iEAAiE;YACjE,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAE5G,IAAI,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,CAAC;gBACnD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,OAAO,SAAS,CAAC;YACrB,CAAC;YAED,MAAM,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;YAErF,MAAM,yBAAyB,GAA8B;gBACzD,YAAY,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,IAAI,CAAC;gBAC9C,mBAAmB,EAAE,KAAK;gBAC1B,KAAK,EAAE,IAAI,CAAC,IAAI;gBAChB,OAAO,EAAE,kBAAkB,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC;gBAChD,kBAAkB,EAAE,IAAI;aAC3B,CAAC;YAEF,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,0BAA0B,CAAC,kBAAkB,CAAC,IAAI,EAAE,yBAAyB,EAAE,IAAI,CAAC,CAAC;YAExH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,yBAAyB,CAAC,YAAa,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC/D,MAAM,MAAM,GAAG,IAAI,CAAC,cAAe,CAAC,CAAC,CAAC,CAAC;gBACvC,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;gBAElE,IAAI,CAAC,OAAO,EAAE,CAAC;oBACX,MAAM,IAAI,KAAK,CACX,0FAA0F,MAAM,WAAW,IAAI,CAAC,IAAI,YAAY,CAAC,oBAAoB,IAAI,CAAC,cAAc,EAAE,CAC7K,CAAC;gBACN,CAAC;gBAED,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;YAC5D,CAAC;YAED,IAAI,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAAE,CAAC;gBACxC,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,KAAK,CAAC,CAAC;YAChI,CAAC;QACL,CAAC;QAED,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACrC,CAAC;IAEM,MAAM,CAAC,KAA6B;QACvC,MAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC;QAChC,MAAM,GAAG,GAAG,KAAK,CAAC,cAAc,CAAC;QAEjC,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,SAAS,EAAE,CAAC;YACzC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,EAAE,CAAC;gBAC5B,OAAO,KAAK,CAAC;YACjB,CAAC;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAClC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;oBACpB,OAAO,KAAK,CAAC;gBACjB,CAAC;YACL,CAAC;QACL,CAAC;aAAM,IAAI,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,SAAS,CAAC,IAAI,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,SAAS,CAAC,EAAE,CAAC;YAC9F,OAAO,KAAK,CAAC;QACjB,CAAC;QAED,OAAO,IAAI,CAAC,kBAAkB,KAAK,KAAK,CAAC,kBAAkB,CAAC;IAChE,CAAC;CACJ","sourcesContent":["// eslint-disable-next-line import/no-internal-modules\r\nimport type { FrameGraphTextureHandle, FrameGraphTextureManager, IMultiRenderTargetOptions, RenderTargetWrapper } from \"core/index\";\r\n\r\n/**\r\n * @internal\r\n * @experimental\r\n */\r\nexport class FrameGraphRenderTarget {\r\n    protected readonly _textureManager: FrameGraphTextureManager;\r\n    protected readonly _renderTargets: FrameGraphTextureHandle[] | undefined;\r\n    protected readonly _renderTargetDepth: FrameGraphTextureHandle | undefined;\r\n    protected _renderTargetWrapper: RenderTargetWrapper | undefined;\r\n    protected _isBackBuffer = false;\r\n\r\n    public readonly name: string;\r\n\r\n    constructor(\r\n        name: string,\r\n        textureManager: FrameGraphTextureManager,\r\n        renderTargets?: FrameGraphTextureHandle | FrameGraphTextureHandle[],\r\n        renderTargetDepth?: FrameGraphTextureHandle\r\n    ) {\r\n        this.name = name;\r\n        this._textureManager = textureManager;\r\n        this._renderTargets = renderTargets === undefined ? undefined : Array.isArray(renderTargets) ? renderTargets : [renderTargets];\r\n        this._renderTargetDepth = renderTargetDepth;\r\n    }\r\n\r\n    public get renderTargetWrapper() {\r\n        if (this._isBackBuffer) {\r\n            return undefined;\r\n        }\r\n\r\n        if (!this._renderTargetWrapper) {\r\n            const engine = this._textureManager.engine;\r\n\r\n            // _renderTargets and _renderTargetDepth cannot both be undefined\r\n            const textureHandle = this._renderTargets === undefined ? this._renderTargetDepth! : this._renderTargets[0];\r\n\r\n            if (this._textureManager.isBackbuffer(textureHandle)) {\r\n                this._isBackBuffer = true;\r\n                return undefined;\r\n            }\r\n\r\n            const textureDescription = this._textureManager.getTextureDescription(textureHandle);\r\n\r\n            const creationOptionsForTexture: IMultiRenderTargetOptions = {\r\n                textureCount: this._renderTargets?.length ?? 0,\r\n                generateDepthBuffer: false,\r\n                label: this.name,\r\n                samples: textureDescription.options.samples ?? 1,\r\n                dontCreateTextures: true,\r\n            };\r\n\r\n            this._renderTargetWrapper = engine.createMultipleRenderTarget(textureDescription.size, creationOptionsForTexture, true);\r\n\r\n            for (let i = 0; i < creationOptionsForTexture.textureCount!; i++) {\r\n                const handle = this._renderTargets![i];\r\n                const texture = this._textureManager.getTextureFromHandle(handle);\r\n\r\n                if (!texture) {\r\n                    throw new Error(\r\n                        `FrameGraphRenderTarget.renderTargetWrapper: Failed to get texture from handle. handle: ${handle}, name: ${this.name}, index: ${i}, renderTargets: ${this._renderTargets}`\r\n                    );\r\n                }\r\n\r\n                this._renderTargetWrapper.setTexture(texture, i, false);\r\n            }\r\n\r\n            if (this._renderTargetDepth !== undefined) {\r\n                this._renderTargetWrapper.setDepthStencilTexture(this._textureManager.getTextureFromHandle(this._renderTargetDepth), false);\r\n            }\r\n        }\r\n\r\n        return this._renderTargetWrapper;\r\n    }\r\n\r\n    public equals(other: FrameGraphRenderTarget): boolean {\r\n        const src = this._renderTargets;\r\n        const dst = other._renderTargets;\r\n\r\n        if (src !== undefined && dst !== undefined) {\r\n            if (src.length !== dst.length) {\r\n                return false;\r\n            }\r\n\r\n            for (let i = 0; i < src.length; i++) {\r\n                if (src[i] !== dst[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n        } else if ((src === undefined && dst !== undefined) || (src !== undefined && dst === undefined)) {\r\n            return false;\r\n        }\r\n\r\n        return this._renderTargetDepth === other._renderTargetDepth;\r\n    }\r\n}\r\n"]}