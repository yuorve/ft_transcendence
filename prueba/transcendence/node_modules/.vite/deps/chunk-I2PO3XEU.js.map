{
  "version": 3,
  "sources": ["../../../dev/core/src/Buffers/dataBuffer.ts"],
  "sourcesContent": ["/**\r\n * Class used to store gfx data (like WebGLBuffer)\r\n */\r\nexport class DataBuffer {\r\n    private static _Counter = 0;\r\n\r\n    /**\r\n     * Gets or sets the number of objects referencing this buffer\r\n     */\r\n    public references: number = 0;\r\n    /** Gets or sets the size of the underlying buffer */\r\n    public capacity: number = 0;\r\n    /**\r\n     * Gets or sets a boolean indicating if the buffer contains 32bits indices\r\n     */\r\n    public is32Bits: boolean = false;\r\n\r\n    /**\r\n     * Gets the underlying buffer\r\n     */\r\n    public get underlyingResource(): any {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Gets the unique id of this buffer\r\n     */\r\n    public readonly uniqueId: number;\r\n\r\n    /**\r\n     * Constructs the buffer\r\n     */\r\n    constructor() {\r\n        this.uniqueId = DataBuffer._Counter++;\r\n    }\r\n}\r\n"],
  "mappings": ";AAGM,IAAO,aAAP,MAAO,YAAU;;;;EAiBnB,IAAW,qBAAkB;AACzB,WAAO;EACX;;;;EAUA,cAAA;AAvBO,SAAA,aAAqB;AAErB,SAAA,WAAmB;AAInB,SAAA,WAAoB;AAkBvB,SAAK,WAAW,YAAW;EAC/B;;AA9Be,WAAA,WAAW;",
  "names": []
}
