{"version":3,"file":"passTask.js","sourceRoot":"","sources":["../../../../../../dev/core/src/FrameGraph/Tasks/PostProcesses/passTask.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,yBAAyB,EAAE,MAAM,mBAAmB,CAAC;AAC9D,OAAO,EAAE,uBAAuB,EAAE,mBAAmB,EAAE,sDAA+C;AAEtG;;GAEG;AACH,MAAM,OAAO,kBAAmB,SAAQ,yBAAyB;IAG7D;;;;;OAKG;IACH,YAAY,IAAY,EAAE,UAAsB,EAAE,eAAqC;QACnF,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,eAAe,IAAI,IAAI,mBAAmB,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACjG,CAAC;CACJ;AAED;;GAEG;AACH,MAAM,OAAO,sBAAuB,SAAQ,yBAAyB;IAGjE;;;;;OAKG;IACH,YAAY,IAAY,EAAE,UAAsB,EAAE,eAAyC;QACvF,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,eAAe,IAAI,IAAI,uBAAuB,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACrG,CAAC;CACJ","sourcesContent":["import type { FrameGraph } from \"core/FrameGraph/frameGraph\";\r\nimport { FrameGraphPostProcessTask } from \"./postProcessTask\";\r\nimport { ThinPassCubePostProcess, ThinPassPostProcess } from \"core/PostProcesses/thinPassPostProcess\";\r\n\r\n/**\r\n * Task which applies a pass post process.\r\n */\r\nexport class FrameGraphPassTask extends FrameGraphPostProcessTask {\r\n    public override readonly postProcess: ThinPassPostProcess;\r\n\r\n    /**\r\n     * Constructs a new pass task.\r\n     * @param name The name of the task.\r\n     * @param frameGraph The frame graph this task is associated with.\r\n     * @param thinPostProcess The thin post process to use for the pass effect. If not provided, a new one will be created.\r\n     */\r\n    constructor(name: string, frameGraph: FrameGraph, thinPostProcess?: ThinPassPostProcess) {\r\n        super(name, frameGraph, thinPostProcess || new ThinPassPostProcess(name, frameGraph.engine));\r\n    }\r\n}\r\n\r\n/**\r\n * Task which applies a pass cube post process.\r\n */\r\nexport class FrameGraphPassCubeTask extends FrameGraphPostProcessTask {\r\n    public override readonly postProcess: ThinPassCubePostProcess;\r\n\r\n    /**\r\n     * Constructs a new pass cube task.\r\n     * @param name The name of the task.\r\n     * @param frameGraph The frame graph this task is associated with.\r\n     * @param thinPostProcess The thin post process to use for the pass cube effect. If not provided, a new one will be created.\r\n     */\r\n    constructor(name: string, frameGraph: FrameGraph, thinPostProcess?: ThinPassCubePostProcess) {\r\n        super(name, frameGraph, thinPostProcess || new ThinPassCubePostProcess(name, frameGraph.engine));\r\n    }\r\n}\r\n"]}